{
  "zh-cn": [
    {
      "filename": "concepts.md",
      "__html": "<h2>公共概念</h2>\n<h3>区域（Region）</h3>\n<p>物理集群部署的最大单位，从地理上看，可以是一个城市或者多个城市，不同区域的集群之间不感知。</p>\n<h3>接入点（Endpoint）</h3>\n<h3>命名空间</h3>\n<p>用于进行租户粒度的配置隔离。不同的命名空间下，可以存在相同的 Group，Data ID 的配置。Namespace 的常用场景之一是不同环境的配置的区分隔离，如开发测试环境和生产环境的配置隔离等。</p>\n<h3>可用区（Available Zone）</h3>\n<p>一个区域下面可以分出多个可用区，用户默认访问当前可用区，一个区域下不同可用区的数据需要实时同步。</p>\n<h2>配置管理</h2>\n<h3>配置</h3>\n<p>在系统开发过程中通常会将一些需要变更的参数、变量等从代码中分离出来独立管理，以独立的配置文件的形式存在。目的是让静态的系统工件或者交付物（如 WAR，JAR 包等）更好地和实际的物理运行环境进行适配。配置管理一般包含在系统部署的过程中，由系统管理员或者运维人员完成这个步骤。配置变更是调整系统运行时的行为的有效手段之一。</p>\n<h3>配置管理</h3>\n<p>在数据中心中，系统中所有配置的编辑、存储、分发、变更管理、历史版本管理、变更审计等所有与配置相关的活动统称为配置管理。</p>\n<h3>配置项</h3>\n<p>是指一个具体的可配置的参数与其值域，通常是 param-key=param-value 的形式存在。例如我们常配置系统的日志输出级别（logLevel=INFO|WARN|ERROR） 就是一个配置项。</p>\n<h3>配置集</h3>\n<p>一组相关或者不相关的配置项的集合称为配置集。通常系统中的一个配置文件就是一个配置集，其内包含了系统各个方面配置。例如一个配置集可能包含了系统如数据源、线程池、日志级别等配置项。</p>\n<h3>配置集 ID（Data ID）</h3>\n<p>在 ACM 中代表配置集的 ID, 是配置组织的维度之一。一般通过 Data ID 来组织划分系统的配置集。一个系统或者应用可以包含多个配置集，每个配置集可以用有意义的名称来标识这个配置集。Data ID 通常采用类 Java 包命名方式（如com.taobao.tc.refund.log.level）的命名规则保证全局唯一性，此命名规则非强制。</p>\n<h3>配置分组（Group）</h3>\n<p>ACM 中配置集的分组，是配置组织的维度之一。通常使用一个有意义的字符串来分组配置集，例如 Buy，Trade 等，用以区分相同 Data ID 的配置集。ACM 创建配置时，如果用户未填 Group 名字，则默认用 DEFAULT_GROUP 代替。Group 的常用场景是同一个配置类型用于不同应用或者组件，如 database_url 配置，MQ_topic 配置等。</p>\n<h3>配置快照</h3>\n<p>ACM 客户端 SDK 会在本地生成配置的快照。当客户端无法连接到 ACM Server 时，可以利用快照提示系统的整体容灾能力。配置快照类似于 Git 中的本地 commit 的概念，也类似缓存，会在适当的时机更新，但是没有缓存过期（expire）的概念。</p>\n<h2>服务发现</h2>\n<h3>服务元信息（Service Metadata）</h3>\n<p><strong><span data-type=\"background\" style=\"background-color:rgb(255, 255, 255)\"><span data-type=\"color\" style=\"color:rgb(245, 34, 45)\">服务</span></span></strong><span data-type=\"background\" style=\"background-color:rgb(255, 255, 255)\">级别的</span>自定义配置<span data-type=\"color\" style=\"color:rgb(38, 38, 38)\"><span data-type=\"background\" style=\"background-color:rgb(255, 255, 255)\">信息，如容灾策略、负载均衡策略、鉴权配置、各种tag。</span></span></p>\n<h3>应用（Application）</h3>\n<p>不同的__<span data-type=\"color\" style=\"color:rgb(245, 34, 45)\">服务</span>__可以根据服务的提供方进行分类，这种分类的其中一个单位是<span data-type=\"color\" style=\"color:rgb(245, 34, 45)\"><strong>应用</strong></span>。</p>\n<h3>分组（Service Group）</h3>\n<p>不同的服务可以归类到同一分组。</p>\n<h3>虚拟集群（Virtual Cluster）</h3>\n<p>同一个<span data-type=\"color\" style=\"color:rgb(245, 34, 45)\"><strong>服务</strong></span>下的服务实例可以再进行分类，这个分类的一个可能单位是<span data-type=\"color\" style=\"color:rgb(245, 34, 45)\"><strong>分组</strong></span>。</p>\n<h3>虚拟集群元信息（Virtual Cluster Metadata）</h3>\n<p>__<span data-type=\"color\" style=\"color:rgb(245, 34, 45)\">分组</span>__级别的自定义配置，这个配置对同一个分组下的实例生效。</p>\n<h3>默认端口（Default Port）</h3>\n<p>虚拟集群配置之一，表示注册到该虚拟集群下的实例，如果不指定端口，则使用该默认端口提供服务。</p>\n<h3>使用实例端口进行健康检查（Use Port of IP for Health Check）</h3>\n<p>虚拟集群配置之一，表示是否使用实例注册的端口进行健康检查。</p>\n<h3>默认检查端口（Default Check Port）</h3>\n<p>虚拟集群配置之一，表示对该虚拟集群下的实例进行健康检查的默认端口，当指定不使用实例注册的端口进行健康检查时，则使用该端口进行健康检查。</p>\n<h3>实例（Instance）</h3>\n<p>提供一个或多个__<span data-type=\"color\" style=\"color:rgb(245, 34, 45)\">服务</span>__的具有可访问网络地址（IP:Port）的进程。</p>\n<h3>实例元信息（Instance Metadata）</h3>\n<p>__<span data-type=\"color\" style=\"color:rgb(245, 34, 45)\">实例</span>__级别的自定义配置。</p>\n<h3>权重（Weight）</h3>\n<p>实例级别的配置，权重是一个浮点型数。权重越大，表示该实例期望被分配的流量越大。</p>\n<h3>健康检查（Health Check）</h3>\n<p>以指定方式检查服务下挂载IP的健康度，确认该IP能否提供服务。根据检查结果，IP会被判断为健康或不健康。对服务发起解析请求时，不健康的IP不会返回给客户端。</p>\n<h3>健康保护阈值（Protect Threshold）</h3>\n<p>为了防止因部分IP不健康导致流量全部流向健康IP，继而造成流量压力把健康IP压垮并形成雪崩效应，健康保护阈值应定义一个0到1之间的浮点数。当域名健康IP占总IP的比例小于该值时，无论IP是否健康，都会将这个IP返回给客户端。这样做虽然损失了一部分流量，但是保证了剩余健康IP能正常工作。</p>\n"
    },
    {
      "filename": "contributing.md",
      "__html": "<h2>如何贡献</h2>\n<p>我们非常欢迎您的贡献和加入，无论是微不足道的清理或大的新功能。我们希望为每个编程语言提供高质量、有良好文档的代码。</p>\n<p>这也不是代码是唯一有贡献项目的方式。我们非常重视文档、与其他项目的集成，并欣然接受这些方面的改进。</p>\n<h2>贡献代码</h2>\n<p>请提交代码时候，检查以下内容：</p>\n<h4>如果变化不大，请编写一些覆盖新功能的单元测试。</h4>\n<h4>如果你正在引入一个全新的特性或API，那么首先启动wiki并在基本设计上达成共识，再开始投入。</h4>\n<h4>我们的工作是及时跟进补丁。如果我们没有及时跟进，请无情的催促我们。</h4>\n<h2>成为贡献者</h2>\n<p>我们会积极纳入新的贡献者。我们更关注的是一系列的持续贡献，良好的品味和对项目维护的持续兴趣。如果你想成为一个提交者（Committer），请让一个现有的提交者(Committer)知道，他们会帮助你通过贡献加入我们。</p>\n<p>现在，我们有几个重要的贡献点：</p>\n<h4>Wiki &amp; JavaDoc</h4>\n<h4>Nacos Console</h4>\n<h4>Nacos SDK(<a href=\"http://C++.Net\">C++.Net</a>\\Php\\Python\\Go\\Node.js)</h4>\n<h5>前提</h5>\n<p>如果你想贡献以上的项，请你必须遵守我们的一些先决条件：</p>\n<h6>可读性，一个API必须具有JavaDoc，一些非常重要的方法也必须有JavaDoc。</h6>\n<h6>可测性，关于测试过程的单元测试覆盖率（80%）</h6>\n<h6>可维护性，可满足我们的<a href=\"style/codeStyle.xml\">PMD spec</a>，以及至少3个月的更新频率</h6>\n<h6>可部署性，我们可以鼓励您部署到<a href=\"http://search.maven.org/\">maven repository</a></h6>\n"
    },
    {
      "filename": "open-API.md",
      "__html": "<h1>配置管理</h1>\n<h2>获取配置</h2>\n<h3>描述</h3>\n<p>获取Nacos上的配置。</p>\n<h3>请求类型</h3>\n<p>GET</p>\n<h3>请求URL</h3>\n<p>/nacos/config.co</p>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">名称</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">是否必须</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">tenant</td>\n<td style=\"text-align:left\">string</td>\n<td style=\"text-align:left\">否</td>\n<td style=\"text-align:left\">租户信息，对应 Nacos 的命名空间字段。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">dataId</td>\n<td style=\"text-align:left\">string</td>\n<td style=\"text-align:left\">是</td>\n<td style=\"text-align:left\">配置 ID。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">group</td>\n<td style=\"text-align:left\">string</td>\n<td style=\"text-align:left\">是</td>\n<td style=\"text-align:left\">配置分组。</td>\n</tr>\n</tbody>\n</table>\n<h3>返回参数</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数类型</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">string</td>\n<td style=\"text-align:left\">配置值</td>\n</tr>\n</tbody>\n</table>\n<h3>错误编码</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">错误代码</th>\n<th style=\"text-align:left\">描述</th>\n<th style=\"text-align:left\">语义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">400</td>\n<td style=\"text-align:left\">Bad Request</td>\n<td style=\"text-align:left\">客户端请求中的语法错误</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">403</td>\n<td style=\"text-align:left\">Forbidden</td>\n<td style=\"text-align:left\">没有权限</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">404</td>\n<td style=\"text-align:left\">Not Found</td>\n<td style=\"text-align:left\">客户端错误，未找到</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">500</td>\n<td style=\"text-align:left\">Internal Server Error</td>\n<td style=\"text-align:left\">服务器内部错误</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">200</td>\n<td style=\"text-align:left\">OK</td>\n<td style=\"text-align:left\">正常</td>\n</tr>\n</tbody>\n</table>\n<h3>示例</h3>\n<ul>\n<li>\n<p>请求示例</p>\n<pre><code>http:serverIp:8080/nacos/config.co?dataId=dataIdparam&amp;group=groupParam&amp;tenant=tenantParam\n\n</code></pre>\n</li>\n<li>\n<p>返回示例</p>\n<pre><code>contentTest\n</code></pre>\n</li>\n</ul>\n<h2>监听配置</h2>\n<h3>描述</h3>\n<p>监听 Nacos 上的配置，以便实时感知配置变更。如果配置变更，则用<a href=\"~~64131~~\">获取配置</a>接口获取配置的最新值，动态刷新本地缓存。</p>\n<p>注册监听采用的是异步 Servlet 技术。注册监听本质就是带着配置和配置值的 MD5 值和后台对比。如果 MD5 值不一致，就立即返回不一致的配置。如果值一致，就等待住 30 秒。返回值为空。</p>\n<h3>请求类型</h3>\n<p>POST</p>\n<h3>请求URL</h3>\n<p>/nacos/config.co</p>\n<h3>请求参数</h3>\n<div class=\"bi-table\">\n  <table>\n    <colgroup>\n      <col width=\"auto\" />\n      <col width=\"auto\" />\n      <col width=\"auto\" />\n      <col width=\"auto\" />\n    </colgroup>\n    <tbody>\n      <tr>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">名称</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">类型</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">是否必须</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">描述</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">Probe-Modify-Request</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">string</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">是</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">监听数据报文。格式为 dataId^2Group2contentMD5^2tenant^1或者dataId^2Group2contentMD5^1。</div>\n          <ul data-type=\"unordered-list\">\n            <li data-type=\"list-item\" data-list-type=\"unordered-list\">\n              <div data-type=\"p\">dataId：配置 ID</div>\n            </li>\n            <li data-type=\"list-item\" data-list-type=\"unordered-list\">\n              <div data-type=\"p\">group：配置分组</div>\n            </li>\n            <li data-type=\"list-item\" data-list-type=\"unordered-list\">\n              <div data-type=\"p\">contentMD5：配置内容 MD5 值</div>\n            </li>\n            <li data-type=\"list-item\" data-list-type=\"unordered-list\">\n              <div data-type=\"p\">tenant：租户信息，对应 Nacos 的命名空间字段(非必填)</div>\n            </li>\n          </ul>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n<h3>Header 参数</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">名称</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">是否必须</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">longPullingTimeout</td>\n<td style=\"text-align:left\">string</td>\n<td style=\"text-align:left\">是</td>\n<td style=\"text-align:left\">长轮训等待 30s，此处填写 30000。</td>\n</tr>\n</tbody>\n</table>\n<h3>参数说明</h3>\n<ul>\n<li>配置多个字段间分隔符：^2  = Character.toString((char) 2</li>\n<li>配置间分隔符：^1 = Character.toString((char) 1)</li>\n<li>contentMD5:  MD5(content)，第一次本地缓存为空，所以这块为空串</li>\n</ul>\n<h3>返回参数</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数类型</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">string</td>\n<td style=\"text-align:left\">配置值</td>\n</tr>\n</tbody>\n</table>\n<h3>错误编码</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">错误代码</th>\n<th style=\"text-align:left\">描述</th>\n<th style=\"text-align:left\">语义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">400</td>\n<td style=\"text-align:left\">Bad Request</td>\n<td style=\"text-align:left\">客户端请求中的语法错误</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">403</td>\n<td style=\"text-align:left\">Forbidden</td>\n<td style=\"text-align:left\">没有权限</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">404</td>\n<td style=\"text-align:left\">Not Found</td>\n<td style=\"text-align:left\">客户端错误，未找到</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">500</td>\n<td style=\"text-align:left\">Internal Server Error</td>\n<td style=\"text-align:left\">服务器内部错误</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">200</td>\n<td style=\"text-align:left\">OK</td>\n<td style=\"text-align:left\">正常</td>\n</tr>\n</tbody>\n</table>\n<h3>示例</h3>\n<ul>\n<li>请求示例</li>\n</ul>\n<pre><code>http://serverIp:8080/nacos/config.co\n\nPOST 请求体数据内容：\n\nProbe-Modify-Request=dataId^2group^2contentMD5^2tenant^1\n\n</code></pre>\n<ul>\n<li>返回示例</li>\n</ul>\n<pre><code>如果配置变化\n\ndataId^2group^2tenant^1\n\n如果配置无变化：会返回空串\n</code></pre>\n<h2>发布配置</h2>\n<h3>描述</h3>\n<p>发布 Nacos 上的配置。</p>\n<h3>请求类型</h3>\n<p>POST</p>\n<h3>请求 URL</h3>\n<p>/nacos/basestone.do</p>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">名称</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">是否必须</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">tenant</td>\n<td style=\"text-align:left\">string</td>\n<td style=\"text-align:left\">否</td>\n<td style=\"text-align:left\">租户信息，对应 Nacos 的命名空间字段</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">dataId</td>\n<td style=\"text-align:left\">string</td>\n<td style=\"text-align:left\">是</td>\n<td style=\"text-align:left\">配置 ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">group</td>\n<td style=\"text-align:left\">string</td>\n<td style=\"text-align:left\">是</td>\n<td style=\"text-align:left\">配置分组</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">content</td>\n<td style=\"text-align:left\">string</td>\n<td style=\"text-align:left\">是</td>\n<td style=\"text-align:left\">配置内容</td>\n</tr>\n</tbody>\n</table>\n<h3>返回参数</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数类型</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">boolean</td>\n<td style=\"text-align:left\">是否发布成功</td>\n</tr>\n</tbody>\n</table>\n<h3>错误编码</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">错误代码</th>\n<th style=\"text-align:left\">描述</th>\n<th style=\"text-align:left\">语义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">400</td>\n<td style=\"text-align:left\">Bad Request</td>\n<td style=\"text-align:left\">客户端请求中的语法错误</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">403</td>\n<td style=\"text-align:left\">Forbidden</td>\n<td style=\"text-align:left\">没有权限</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">404</td>\n<td style=\"text-align:left\">Not Found</td>\n<td style=\"text-align:left\">客户端错误，未找到</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">500</td>\n<td style=\"text-align:left\">Internal Server Error</td>\n<td style=\"text-align:left\">服务器内部错误</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">200</td>\n<td style=\"text-align:left\">OK</td>\n<td style=\"text-align:left\">正常</td>\n</tr>\n</tbody>\n</table>\n<h3>示例</h3>\n<ul>\n<li>请求示例</li>\n</ul>\n<pre><code>http:serverIp:8080/nacos/basestone.do?method=syncUpdateAll\n\nhttp body：\ndataId=dataIdparam&amp;group=groupParam&amp;tenant=tenantParam&amp;content=contentParam\n\n</code></pre>\n<ul>\n<li>返回示例</li>\n</ul>\n<pre><code>true\n</code></pre>\n<h2>删除配置</h2>\n<h3>描述</h3>\n<p>删除 Nacos 上的配置。</p>\n<h3>请求类型</h3>\n<p>POST</p>\n<h3>请求 URL</h3>\n<p>/nacos/datum.do</p>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">名称</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">是否必须</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">tenant</td>\n<td style=\"text-align:left\">string</td>\n<td style=\"text-align:left\">否</td>\n<td style=\"text-align:left\">租户信息，对应 Naocs 的命名空间字段</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">dataId</td>\n<td style=\"text-align:left\">string</td>\n<td style=\"text-align:left\">是</td>\n<td style=\"text-align:left\">配置 ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">group</td>\n<td style=\"text-align:left\">string</td>\n<td style=\"text-align:left\">是</td>\n<td style=\"text-align:left\">配置分组</td>\n</tr>\n</tbody>\n</table>\n<h3>返回参数</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数类型</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">boolean</td>\n<td style=\"text-align:left\">是否删除成功</td>\n</tr>\n</tbody>\n</table>\n<h3>错误编码</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">错误代码</th>\n<th style=\"text-align:left\">描述</th>\n<th style=\"text-align:left\">语义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">400</td>\n<td style=\"text-align:left\">Bad Request</td>\n<td style=\"text-align:left\">客户端请求中的语法错误</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">403</td>\n<td style=\"text-align:left\">Forbidden</td>\n<td style=\"text-align:left\">没有权限</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">404</td>\n<td style=\"text-align:left\">Not Found</td>\n<td style=\"text-align:left\">客户端错误，未找到</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">500</td>\n<td style=\"text-align:left\">Internal Server Error</td>\n<td style=\"text-align:left\">服务器内部错误</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">200</td>\n<td style=\"text-align:left\">OK</td>\n<td style=\"text-align:left\">正常</td>\n</tr>\n</tbody>\n</table>\n<h3>示例</h3>\n<ul>\n<li>请求示例</li>\n</ul>\n<pre><code>http:serverIp:8080/nacos/datum.do?method=deleteAllDatums\n\nhttp body：\ndataId=dataIdparam&amp;group=groupParam\n\n</code></pre>\n<ul>\n<li>返回示例</li>\n</ul>\n<pre><code>true\n</code></pre>\n<h1>服务发现API</h1>\n<h2>注册实例</h2>\n<h3>描述</h3>\n<p>注册一个实例到服务。</p>\n<h3>请求类型</h3>\n<p>PUT</p>\n<h3>请求路径</h3>\n<pre><code class=\"language-plain\">/nacos/naming/instance\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">名称</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">是否必选</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">ip</td>\n<td style=\"text-align:left\">字符串</td>\n<td style=\"text-align:left\">是</td>\n<td>服务实例ip</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">port</td>\n<td style=\"text-align:left\">int</td>\n<td style=\"text-align:left\">是</td>\n<td>服务实例port</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">tenant</td>\n<td style=\"text-align:left\">字符串</td>\n<td style=\"text-align:left\">否</td>\n<td>租户ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">weight</td>\n<td style=\"text-align:left\">double</td>\n<td style=\"text-align:left\">否</td>\n<td>权重</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">healthy</td>\n<td style=\"text-align:left\">boolean</td>\n<td style=\"text-align:left\">否</td>\n<td>是否健康</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">metadata</td>\n<td style=\"text-align:left\">字符串</td>\n<td style=\"text-align:left\">否</td>\n<td>扩展信息</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">cluster</td>\n<td style=\"text-align:left\">JSON格式字符串</td>\n<td style=\"text-align:left\">否</td>\n<td>集群信息</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">service</td>\n<td style=\"text-align:left\">JSON格式字符串</td>\n<td style=\"text-align:left\">否，不存在则serviceName必须存在。</td>\n<td>服务信息</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">serviceName</td>\n<td style=\"text-align:left\">字符串</td>\n<td style=\"text-align:left\">如果service参数存在，则不必选，否则必选。</td>\n<td>服务名</td>\n</tr>\n</tbody>\n</table>\n<p>service参数格式：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">名称</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">是否必选</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">name</td>\n<td style=\"text-align:left\">字符串</td>\n<td style=\"text-align:left\">是</td>\n<td>服务名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">app</td>\n<td style=\"text-align:left\">int</td>\n<td style=\"text-align:left\">否</td>\n<td>应用名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">group</td>\n<td style=\"text-align:left\">字符串</td>\n<td style=\"text-align:left\">否</td>\n<td>服务分组</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">protectThreshold</td>\n<td style=\"text-align:left\">double</td>\n<td style=\"text-align:left\">否</td>\n<td>保护阈值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">enableHealthCheck</td>\n<td style=\"text-align:left\">boolean</td>\n<td style=\"text-align:left\">否</td>\n<td>是否打开心跳检查</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">enableClientBeat</td>\n<td style=\"text-align:left\">boolean</td>\n<td style=\"text-align:left\">否</td>\n<td>是否打开客户端心跳</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">metadata</td>\n<td style=\"text-align:left\">JSON</td>\n<td style=\"text-align:left\">否</td>\n<td>扩展信息</td>\n</tr>\n</tbody>\n</table>\n<p>cluster参数格式：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">名称</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">是否必选</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">name</td>\n<td style=\"text-align:left\">字符串</td>\n<td style=\"text-align:left\">是</td>\n<td>集群名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">serviceName</td>\n<td style=\"text-align:left\">字符串</td>\n<td style=\"text-align:left\">是</td>\n<td>集群归属的服务名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">healthChecker</td>\n<td style=\"text-align:left\">JSON</td>\n<td style=\"text-align:left\">否</td>\n<td>健康检查方式</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">defaultPort</td>\n<td style=\"text-align:left\">int</td>\n<td style=\"text-align:left\">否</td>\n<td>默认实例端口</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">defaultCheckPort</td>\n<td style=\"text-align:left\">int</td>\n<td style=\"text-align:left\">否</td>\n<td>默认健康检查端口</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">userIPPort4Check</td>\n<td style=\"text-align:left\">boolean</td>\n<td style=\"text-align:left\">否</td>\n<td>是否用实例端口做健康检查</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">metadata</td>\n<td style=\"text-align:left\">JSON</td>\n<td style=\"text-align:left\">否</td>\n<td>扩展信息</td>\n</tr>\n</tbody>\n</table>\n<p>healthChecker目前支持三种：TCP、HTTP和MYSQL。\n根据type的类型，需要传递的参数各有区别。\nTCP类型：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">名称</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">是否必选</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">type=TCP</td>\n<td style=\"text-align:left\">字符串</td>\n<td style=\"text-align:left\">是</td>\n<td>检查类型</td>\n</tr>\n</tbody>\n</table>\n<p>HTTP类型：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">名称</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">是否必选</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">type=HTTP</td>\n<td style=\"text-align:left\">字符串</td>\n<td style=\"text-align:left\">是</td>\n<td>检查类型</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">curlPath</td>\n<td style=\"text-align:left\">字符串</td>\n<td style=\"text-align:left\">是</td>\n<td>检查路径</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">curlHost</td>\n<td style=\"text-align:left\">字符串</td>\n<td style=\"text-align:left\">否</td>\n<td>检查host，存放HTTP Header</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">checkCode</td>\n<td style=\"text-align:left\">int</td>\n<td style=\"text-align:left\">否，默认200</td>\n<td>预期返回码</td>\n</tr>\n</tbody>\n</table>\n<p>MYSQL类型：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">名称</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">是否必选</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">type=MYSQL</td>\n<td style=\"text-align:left\">字符串</td>\n<td style=\"text-align:left\">是</td>\n<td>检查类型</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">user</td>\n<td style=\"text-align:left\">字符串</td>\n<td style=\"text-align:left\">是</td>\n<td>mysql用户</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">pwd</td>\n<td style=\"text-align:left\">字符串</td>\n<td style=\"text-align:left\">是</td>\n<td>mysql密码</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">cmd</td>\n<td style=\"text-align:left\">字符串</td>\n<td style=\"text-align:left\">是</td>\n<td>执行命令</td>\n</tr>\n</tbody>\n</table>\n<h3>示例请求</h3>\n<pre><code class=\"language-plain\">curl -X PUT 'http://127.0.0.1:8080/nacos/naming/instance?cluster=%7b%22metadata%22%3a%7b%7d%2c%22defaultCheckPort%22%3a80%2c%22defaultPort%22%3a80%2c%22healthChecker%22%3a%7b%22type%22%3a%22TCP%22%7d%2c%22name%22%3a%22%22%2c%22useIPPort4Check%22%3atrue%7d&amp;port=8080&amp;healthy=true&amp;ip=11.11.11.11&amp;weight=1.0&amp;serviceName=nacos.test.3&amp;encoding=GBK&amp;tenant=n1''\n</code></pre>\n<h3>示例返回</h3>\n<p>ok</p>\n<h2>删除实例</h2>\n<h3>描述</h3>\n<p>删除服务下的一个实例。</p>\n<h3>请求类型</h3>\n<p>DELETE</p>\n<h3>请求路径</h3>\n<pre><code class=\"language-plain\">/nacos/naming/instance\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">名称</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">是否必选</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">serviceName</td>\n<td style=\"text-align:left\">字符串</td>\n<td style=\"text-align:left\">是</td>\n<td>服务名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ip</td>\n<td style=\"text-align:left\">字符串</td>\n<td style=\"text-align:left\">是</td>\n<td>服务实例ip</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">port</td>\n<td style=\"text-align:left\">int</td>\n<td style=\"text-align:left\">是</td>\n<td>服务实例port</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">cluster</td>\n<td style=\"text-align:left\">字符串</td>\n<td style=\"text-align:left\">是</td>\n<td>集群名称</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">tenant</td>\n<td style=\"text-align:left\">字符串</td>\n<td style=\"text-align:left\">否</td>\n<td>租户ID</td>\n</tr>\n</tbody>\n</table>\n<h3>示例请求</h3>\n<pre><code class=\"language-plain\">curl -X DELETE 127.0.0.1:8080/nacos/naming/instance?serviceName=nacos.test.1&amp;ip=1.1.1.1&amp;port=8888&amp;cluster=TEST1\n</code></pre>\n<h3>示例返回</h3>\n<p>ok</p>\n<h2>修改实例</h2>\n<h3>描述</h3>\n<p>修改服务下的一个实例。</p>\n<h3>请求类型</h3>\n<p>POST</p>\n<h3>请求路径</h3>\n<pre><code class=\"language-plain\">/nacos/naming/instance\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">名称</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">是否必选</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">serviceName</td>\n<td style=\"text-align:left\">字符串</td>\n<td style=\"text-align:left\">是</td>\n<td>服务名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ip</td>\n<td style=\"text-align:left\">字符串</td>\n<td style=\"text-align:left\">是</td>\n<td>服务实例ip</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">port</td>\n<td style=\"text-align:left\">int</td>\n<td style=\"text-align:left\">是</td>\n<td>服务实例port</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">cluster</td>\n<td style=\"text-align:left\">字符串</td>\n<td style=\"text-align:left\">是</td>\n<td>集群名称</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">tenant</td>\n<td style=\"text-align:left\">字符串</td>\n<td style=\"text-align:left\">否</td>\n<td>租户ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">weight</td>\n<td style=\"text-align:left\">double</td>\n<td style=\"text-align:left\">否</td>\n<td>权重</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">metadata</td>\n<td style=\"text-align:left\">JSON</td>\n<td style=\"text-align:left\">否</td>\n<td>扩展信息</td>\n</tr>\n</tbody>\n</table>\n<h3>示例请求</h3>\n<pre><code class=\"language-plain\">curl -X POST 127.0.0.1:8080/nacos/naming/instance?serviceName=nacos.test.1&amp;ip=1.1.1.1&amp;port=8888&amp;cluster=TEST1&amp;weight=8&amp;metadata={}\n</code></pre>\n<h3>示例返回</h3>\n<p>ok</p>\n<h2>查询实例列表</h2>\n<h3>描述</h3>\n<p>查询服务下的实例列表</p>\n<h3>请求类型</h3>\n<p>GET</p>\n<h3>请求路径</h3>\n<pre><code class=\"language-plain\">/nacos/naming/instances\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">名称</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">是否必选</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">serviceName</td>\n<td style=\"text-align:left\">字符串</td>\n<td style=\"text-align:left\">是</td>\n<td>服务名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">tenant</td>\n<td style=\"text-align:left\">字符串</td>\n<td style=\"text-align:left\">否</td>\n<td>租户Id</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">clusters</td>\n<td style=\"text-align:left\">字符串，多个集群用逗号分隔</td>\n<td style=\"text-align:left\">否</td>\n<td>集群名称</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">healthyOnly</td>\n<td style=\"text-align:left\">boolean</td>\n<td style=\"text-align:left\">否，默认为false</td>\n<td>是否只返回健康实例</td>\n</tr>\n</tbody>\n</table>\n<h3>示例请求</h3>\n<pre><code class=\"language-plain\">curl -X GET 127.0.0.1:8080/nacos/naming/instances?serviceName=nacos.test.1\n</code></pre>\n<h3>示例返回</h3>\n<pre><code class=\"language-json\">{\n\t<span class=\"hljs-attr\">\"dom\"</span>: <span class=\"hljs-string\">\"nacos.test.1\"</span>,\n\t<span class=\"hljs-attr\">\"cacheMillis\"</span>: <span class=\"hljs-number\">1000</span>,\n\t<span class=\"hljs-attr\">\"useSpecifiedURL\"</span>: <span class=\"hljs-literal\">false</span>,\n\t<span class=\"hljs-attr\">\"hosts\"</span>: [{\n\t\t<span class=\"hljs-attr\">\"valid\"</span>: <span class=\"hljs-literal\">true</span>,\n\t\t<span class=\"hljs-attr\">\"marked\"</span>: <span class=\"hljs-literal\">false</span>,\n\t\t<span class=\"hljs-attr\">\"instanceId\"</span>: <span class=\"hljs-string\">\"10.10.10.10-8888-DEFAULT-nacos.test.1\"</span>,\n\t\t<span class=\"hljs-attr\">\"port\"</span>: <span class=\"hljs-number\">8888</span>,\n\t\t<span class=\"hljs-attr\">\"ip\"</span>: <span class=\"hljs-string\">\"10.10.10.10\"</span>,\n\t\t<span class=\"hljs-attr\">\"weight\"</span>: <span class=\"hljs-number\">1.0</span>,\n\t\t<span class=\"hljs-attr\">\"metadata\"</span>: {}\n\t}],\n\t<span class=\"hljs-attr\">\"checksum\"</span>: <span class=\"hljs-string\">\"3bbcf6dd1175203a8afdade0e77a27cd1528787794594\"</span>,\n\t<span class=\"hljs-attr\">\"lastRefTime\"</span>: <span class=\"hljs-number\">1528787794594</span>,\n\t<span class=\"hljs-attr\">\"env\"</span>: <span class=\"hljs-string\">\"\"</span>,\n\t<span class=\"hljs-attr\">\"clusters\"</span>: <span class=\"hljs-string\">\"\"</span>\n}\n</code></pre>\n<h2>查询实例详情</h2>\n<h3>描述</h3>\n<p>查询一个服务下个某个实例详情。</p>\n<h3>请求类型</h3>\n<p>GET</p>\n<h3>请求路径</h3>\n<pre><code class=\"language-plain\">/nacos/naming/instance\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">名称</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">是否必选</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">serviceName</td>\n<td style=\"text-align:left\">字符串</td>\n<td style=\"text-align:left\">是</td>\n<td>服务名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ip</td>\n<td style=\"text-align:left\">字符串</td>\n<td style=\"text-align:left\">是</td>\n<td>实例IP</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">port</td>\n<td style=\"text-align:left\">字符串</td>\n<td style=\"text-align:left\">是</td>\n<td>实例端口</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">tenant</td>\n<td style=\"text-align:left\">字符串</td>\n<td style=\"text-align:left\">否</td>\n<td>租户Id</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">clusters</td>\n<td style=\"text-align:left\">字符串，多个集群用逗号分隔</td>\n<td style=\"text-align:left\">否</td>\n<td>集群名称</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">healthyOnly</td>\n<td style=\"text-align:left\">boolean</td>\n<td style=\"text-align:left\">否，默认为false</td>\n<td>是否只返回健康实例</td>\n</tr>\n</tbody>\n</table>\n<h3>示例请求</h3>\n<pre><code class=\"language-plain\">curl -X GET '127.0.0.1:8080/nacos/naming/instance?serviceName=nacos.test.2&amp;ip=10.10.10.10&amp;port=8888&amp;cluster=DEFAULT'\n</code></pre>\n<h3>示例返回</h3>\n<pre><code class=\"language-json\">{\n\t<span class=\"hljs-attr\">\"metadata\"</span>: {},\n\t<span class=\"hljs-attr\">\"instanceId\"</span>: <span class=\"hljs-string\">\"10.10.10.10-8888-DEFAULT-nacos.test.2\"</span>,\n\t<span class=\"hljs-attr\">\"port\"</span>: <span class=\"hljs-number\">8888</span>,\n\t<span class=\"hljs-attr\">\"service\"</span>: <span class=\"hljs-string\">\"nacos.test.2\"</span>,\n\t<span class=\"hljs-attr\">\"healthy\"</span>: <span class=\"hljs-literal\">false</span>,\n\t<span class=\"hljs-attr\">\"ip\"</span>: <span class=\"hljs-string\">\"10.10.10.10\"</span>,\n\t<span class=\"hljs-attr\">\"clusterName\"</span>: <span class=\"hljs-string\">\"DEFAULT\"</span>,\n\t<span class=\"hljs-attr\">\"weight\"</span>: <span class=\"hljs-number\">1.0</span>\n}\n</code></pre>\n"
    },
    {
      "filename": "quick-start.md",
      "__html": "<p>这个快速开始手册是帮忙您快速在你的电脑上，下载安装并使用Nacos。</p>\n<h2>1.预备环境准备</h2>\n<p>请确保是在环境中安装使用:</p>\n<p>1.64bit OS, Linux/Unix/Mac is recommended;\n2.64bit JDK 1.8+;\n3.Maven 3.2.x;</p>\n<h2>2.下载源码&amp;或者下载安装包</h2>\n<blockquote>\n<p>unzip nacos-source.zip\ncd nacos/\nmvn -Prelease-all -DskipTests clean install -U\ncd distribution/target/nacos-all/nacos</p>\n</blockquote>\n<h2>3.启动服务器</h2>\n<h3>Linux/Unix/Mac</h3>\n<p>启动命令(standalone代表着单机模式运行，非集群模式):\nsh <a href=\"http://startup.sh\">startup.sh</a> standalone</p>\n<h3>Windows</h3>\n<p>启动命令(standalone代表着单机模式运行，非集群模式):\ncmd startup.cmd standalone</p>\n<h2>4.服务发现和配置管理</h2>\n<h3>发布服务实例</h3>\n<p>curl -X PUT '<a href=\"http://127.0.0.1:8080/nacos/naming/instance?serviceName=nacos.naming.serviceName&amp;ip=20.18.7.10&amp;port=8080\">http://127.0.0.1:8080/nacos/naming/instance?serviceName=nacos.naming.serviceName&amp;ip=20.18.7.10&amp;port=8080</a>'</p>\n<h3>获取服务实例</h3>\n<p>curl -X GET <a href=\"http://127.0.0.1:8080/nacos/naming/instances?serviceName=nacos.naming.serviceName\">http://127.0.0.1:8080/nacos/naming/instances?serviceName=nacos.naming.serviceName</a>'</p>\n<h3>发布配置</h3>\n<p>curl -X POST &quot;<a href=\"http://127.0.0.1:8080/nacos/basestone.do?method=syncUpdateAll?dataId=nacos.cfg.dataId&amp;group=test&amp;content=helloWorld\">http://127.0.0.1:8080/nacos/basestone.do?method=syncUpdateAll?dataId=nacos.cfg.dataId&amp;group=test&amp;content=helloWorld</a>&quot;</p>\n<h3>获取配置</h3>\n<p>curl  -X GET &quot;<a href=\"http://127.0.0.1:8080/nacos/config.no?dataId=nacos.cfg.dataId&amp;group=test\">http://127.0.0.1:8080/nacos/config.no?dataId=nacos.cfg.dataId&amp;group=test</a>&quot;</p>\n<h2>5.关闭服务器</h2>\n<p>sh <a href=\"http://shutdown.sh\">shutdown.sh</a></p>\n"
    },
    {
      "filename": "sdk.md",
      "__html": "<h1>配置管理</h1>\n<h2>获取配置</h2>\n<h3>描述</h3>\n<p>用于服务启动的时候从 ACM 获取配置。</p>\n<pre><code>public static String getConfig(String dataId, String group, long timeoutMs) throws ConfigException\n\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数名</th>\n<th style=\"text-align:left\">参数类型</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">dataId</td>\n<td style=\"text-align:left\">string</td>\n<td style=\"text-align:left\">配置 ID，采用类似 package.class（如com.taobao.tc.refund.log.level）的命名规则保证全局唯一性，class 部分建议是配置的业务含义。全部字符小写。只允许英文字符和 4 种特殊字符（&quot;.&quot;、&quot;:&quot;、&quot;-&quot;、&quot;_&quot;），不超过 256 字节。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">group</td>\n<td style=\"text-align:left\">string</td>\n<td style=\"text-align:left\">配置分组，建议填写产品名:模块名（如ACM:Test）保证唯一性，只允许英文字符和4种特殊字符（&quot;.&quot;、&quot;:&quot;、&quot;-&quot;、&quot;_&quot;），不超过128字节。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">timeout</td>\n<td style=\"text-align:left\">long</td>\n<td style=\"text-align:left\">读取配置超时时间，单位 ms，推荐值 3000。</td>\n</tr>\n</tbody>\n</table>\n<h3>返回值</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数类型</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">string</td>\n<td style=\"text-align:left\">配置值</td>\n</tr>\n</tbody>\n</table>\n<h3>请求示例</h3>\n<pre><code>try {\n    // 初始化配置服务，控制台通过示例代码自动获取下面参数\n    ConfigService.init(&quot;${endpoint}&quot;, &quot;${namespace}&quot;, &quot;${accessKey}&quot;, &quot;${secretKey}&quot;);\n    // 主动获取配置\n\tString content = ConfigService.getConfig(&quot;${dataId}&quot;, &quot;${group}&quot;, 3000);\n\tSystem.out.println(content);\n} catch (ConfigException e) {\n    // TODO Auto-generated catch block\n    e.printStackTrace();\n}\n</code></pre>\n<h3>异常说明</h3>\n<p>读取配置超时或网络异常，抛出 ConfigException 异常。</p>\n<h2>监听配置</h2>\n<h3>描述</h3>\n<p>如果希望 ACM 推送配置变更，可以使用 ACM 动态监听配置接口来实现。</p>\n<pre><code>public static void addListener(String dataId, ConfigChangeListenerAdapter listener)\n\n</code></pre>\n<h3>请求参数</h3>\n<div class=\"bi-table\">\n  <table>\n    <colgroup>\n      <col width=\"auto\" />\n      <col width=\"auto\" />\n      <col width=\"auto\" />\n    </colgroup>\n    <tbody>\n      <tr>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">参数名</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">参数类型</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">描述</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">dataId</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">string</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">配置 ID，采用类似 package.class（如com.taobao.tc.refund.log.level）的命名规则保证全局唯一性，class 部分建议是配置的业务含义。 全部字符小写。只允许英文字符和 4 种特殊字符（&quot;.&quot;、&quot;:&quot;、&quot;-&quot;、&quot;_&quot;）。不超过 256 字节。</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">group</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">string</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">配置分组，建议填写<strong>产品名：模块名</strong>（如 ACM:Test）保证唯一性。 只允许英文字符和4种特殊字符（&quot;.&quot;、&quot;:&quot;、&quot;-&quot;、&quot;_&quot;），不超过128字节。\n          </div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">listener</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">ConfigChangeListener</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">监听器，配置变更进入监听器的回调函数。</div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n<h3>返回值</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数类型</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">string</td>\n<td style=\"text-align:left\">配置值，初始化或者配置变更的时候通过回调函数返回该值。</td>\n</tr>\n</tbody>\n</table>\n<h3>请求示例</h3>\n<pre><code>\n// 初始化配置服务，控制台通过示例代码自动获取下面参数\nConfigService.init(&quot;${endpoint}&quot;, &quot;${namespace}&quot;, &quot;${accessKey}&quot;, &quot;${secretKey}&quot;);\n// 初始化的时候，给配置添加监听,配置变更会回调通知\nConfigService.addListener(&quot;${dataId}&quot;, &quot;${group}&quot;, new ConfigChangeListener() {\n    public void receiveConfigInfo(String configInfo) {\n        // 当配置更新后，通过该回调函数将最新值返回给用户\n        System.out.println(configInfo);\n    }\n});\n// 测试让主线程不退出，因为订阅配置是守护线程，主线程退出守护线程就会退出。 正式代码中无需下面代码\nwhile (true) {\n    try {\n        Thread.sleep(1000);\n    } catch (InterruptedException e) {\n        e.printStackTrace();\n    }\n}\n</code></pre>\n<h2>删除监听</h2>\n<h3>描述</h3>\n<p>取消监听配置，取消监听后配置不会再推送。</p>\n<pre><code>static public void removeListener(String dataId, String group, ManagerListener listener)\n\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数名</th>\n<th style=\"text-align:left\">参数类型</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">dataId</td>\n<td style=\"text-align:left\">string</td>\n<td style=\"text-align:left\">配置 ID，采用类似 package.class（如com.taobao.tc.refund.log.level）的命名规则保证全局唯一性，class 部分建议是配置的业务含义。全部字符小写。只允许英文字符和 4 种特殊字符（&quot;.&quot;、&quot;:&quot;、&quot;-&quot;、&quot;_&quot;），不超过 256 字节。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">listener</td>\n<td style=\"text-align:left\">ConfigChangeListenerAdapter</td>\n<td style=\"text-align:left\">监听器，配置变更进入监听器的回调函数。</td>\n</tr>\n</tbody>\n</table>\n<h3>使用示例</h3>\n<pre><code>ConfigService.removeListener(&quot;yanlin&quot;, youListener);\n\n</code></pre>\n<h2>发布配置</h2>\n<h3>描述</h3>\n<p>用于通过程序自动发布 ACM 配置，以便通过自动化手段降低运维成本。</p>\n<p>__注意：__创建和修改配置时使用的同一个发布接口，当配置不存在时会创建配置，当配置已存在时会更新配置。</p>\n<pre><code>public static boolean publishConfig(String dataId, String group, String content) throws ConfigException\n\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数名</th>\n<th style=\"text-align:left\">参数类型</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">dataId</td>\n<td style=\"text-align:left\">string</td>\n<td style=\"text-align:left\">配置 ID，采用类似 <code>package.class</code>（如 <code>com.taobao.tc.refund.log.level</code>）的命名规则保证全局唯一性。建议根据配置的业务含义来定义 class 部分。全部字符均为小写。只允许英文字符和 4 种特殊字符（“.”、“:”、“-”、“_”），不超过 256 字节。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">group</td>\n<td style=\"text-align:left\">string</td>\n<td style=\"text-align:left\">配置分组，建议填写<code>产品名:模块名</code>（如 <code>ACM:Test</code>）来保证唯一性。只允许英文字符和 4 种特殊字符（“.”、“:”、“-”、“_”），不超过 128 字节。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">content</td>\n<td style=\"text-align:left\">string</td>\n<td style=\"text-align:left\">配置内容，不超过 100K 字节。</td>\n</tr>\n</tbody>\n</table>\n<h3>返回参数</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数类型</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">boolean</td>\n<td style=\"text-align:left\">是否发布成功</td>\n</tr>\n</tbody>\n</table>\n<h3>请求示例</h3>\n<pre><code>try {\n    // 初始化配置服务，控制台通过示例代码自动获取下面参数\n    ConfigService.init(&quot;${endpoint}&quot;, &quot;${namespace}&quot;, &quot;${accessKey}&quot;, &quot;${secretKey}&quot;);\n    // 主动获取配置\n\tboolean isPublishOk = ConfigService.publishConfig(&quot;${dataId}&quot;, &quot;${group}&quot;, &quot;${content}&quot;);\n\tSystem.out.println(isPublishOk);\n} catch (ConfigException e) {\n    // TODO Auto-generated catch block\n    e.printStackTrace();\n}\n</code></pre>\n<h3>异常说明</h3>\n<p>读取配置超时或网络异常，抛出 ConfigException 异常。</p>\n<h2>删除配置</h2>\n<h3>描述</h3>\n<p>用于通过程序自动删除 ACM 配置，以便通过自动化手段降低运维成本。</p>\n<p><strong>注意：</strong> 当配置已存在时会删除该配置，当配置不存在时会直接返回成功消息。</p>\n<pre><code>public static boolean removeConfig(String dataId, String group) throws ConfigException\n\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数名</th>\n<th style=\"text-align:left\">参数类型</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">dataId</td>\n<td style=\"text-align:left\">string</td>\n<td style=\"text-align:left\">配置 ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">group</td>\n<td style=\"text-align:left\">string</td>\n<td style=\"text-align:left\">配置分组</td>\n</tr>\n</tbody>\n</table>\n<h3>返回参数</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数类型</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">boolean</td>\n<td style=\"text-align:left\">是否删除成功</td>\n</tr>\n</tbody>\n</table>\n<h3>请求示例</h3>\n<pre><code>try {\n    // 初始化配置服务，控制台通过示例代码自动获取下面参数\n    ConfigService.init(&quot;${endpoint}&quot;, &quot;${namespace}&quot;, &quot;${accessKey}&quot;, &quot;${secretKey}&quot;);\n    // 主动获取配置\n\tboolean isRemoveOk = ConfigService.removeConfig(&quot;${dataId}&quot;, &quot;${group}&quot;);\n\tSystem.out.println(isRemoveOk);\n} catch (ConfigException e) {\n    // TODO Auto-generated catch block\n    e.printStackTrace();\n}\n</code></pre>\n<h3>异常说明</h3>\n<p>读取配置超时或网络异常，抛出 ConfigException 异常。</p>\n<h1>服务发现SDK</h1>\n<h2>注册实例</h2>\n<h3>描述</h3>\n<p>注册一个实例到服务。</p>\n<pre><code class=\"language-java\">    <span class=\"hljs-comment\">/**\n     * Register a instance to service\n     *\n     * <span class=\"hljs-doctag\">@param</span> serviceName name of service\n     * <span class=\"hljs-doctag\">@param</span> ip          instance ip\n     * <span class=\"hljs-doctag\">@param</span> port        instance port\n     * <span class=\"hljs-doctag\">@throws</span> NacosException\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">registerInstance</span><span class=\"hljs-params\">(String serviceName, String ip, <span class=\"hljs-keyword\">int</span> port)</span> <span class=\"hljs-keyword\">throws</span> NacosException</span>;\n\n    <span class=\"hljs-comment\">/**\n     * Register a instance to service with specified cluster name\n     *\n     * <span class=\"hljs-doctag\">@param</span> serviceName name of service\n     * <span class=\"hljs-doctag\">@param</span> ip          instance ip\n     * <span class=\"hljs-doctag\">@param</span> port        instance port\n     * <span class=\"hljs-doctag\">@param</span> clusterName instance cluster name\n     * <span class=\"hljs-doctag\">@throws</span> NacosException\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">registerInstance</span><span class=\"hljs-params\">(String serviceName, String ip, <span class=\"hljs-keyword\">int</span> port, String clusterName)</span> <span class=\"hljs-keyword\">throws</span> NacosException</span>;\n\n    <span class=\"hljs-comment\">/**\n     * Register a instance to service with specified instance properties\n     *\n     * <span class=\"hljs-doctag\">@param</span> serviceName name of service\n     * <span class=\"hljs-doctag\">@param</span> instance    instance to register\n     * <span class=\"hljs-doctag\">@throws</span> NacosException\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">registerInstance</span><span class=\"hljs-params\">(String serviceName, Instance instance)</span> <span class=\"hljs-keyword\">throws</span> NacosException</span>;\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">名称</th>\n<th style=\"text-align:left\">类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">serviceName</td>\n<td style=\"text-align:left\">字符串</td>\n<td>服务名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ip</td>\n<td style=\"text-align:left\">字符串</td>\n<td>服务实例ip</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">port</td>\n<td style=\"text-align:left\">int</td>\n<td>服务实例port</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">clusterName</td>\n<td style=\"text-align:left\">字符串</td>\n<td>集群名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">instance</td>\n<td style=\"text-align:left\">参见代码注释</td>\n<td>实例属性</td>\n</tr>\n</tbody>\n</table>\n<h3>返回参数</h3>\n<p>无</p>\n<h3>请求示例</h3>\n<pre><code class=\"language-java\">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class=\"hljs-string\">\"serveAddr\"</span>));\nnaming.registerInstance(<span class=\"hljs-string\">\"nacos.test.3\"</span>, <span class=\"hljs-string\">\"11.11.11.11\"</span>, <span class=\"hljs-number\">8888</span>, <span class=\"hljs-string\">\"TEST1\"</span>);\n\nInstance instance = <span class=\"hljs-keyword\">new</span> Instance();\ninstance.setIp(<span class=\"hljs-string\">\"55.55.55.55\"</span>);\ninstance.setPort(<span class=\"hljs-number\">9999</span>);\ninstance.setHealthy(<span class=\"hljs-keyword\">false</span>);\ninstance.setWeight(<span class=\"hljs-number\">2.0</span>);\nMap&lt;String, String&gt; instanceMeta = <span class=\"hljs-keyword\">new</span> HashMap&lt;&gt;();\ninstanceMeta.put(<span class=\"hljs-string\">\"site\"</span>, <span class=\"hljs-string\">\"et2\"</span>);\ninstance.setMetadata(instanceMeta);\n\nService service = <span class=\"hljs-keyword\">new</span> Service(<span class=\"hljs-string\">\"nacos.test.4\"</span>);\nservice.setApp(<span class=\"hljs-string\">\"nacos-naming\"</span>);\nservice.setEnableClientBeat(<span class=\"hljs-keyword\">true</span>);\nservice.setEnableHealthCheck(<span class=\"hljs-keyword\">true</span>);\nservice.setProtectThreshold(<span class=\"hljs-number\">0.8F</span>);\nservice.setGroup(<span class=\"hljs-string\">\"CNCF\"</span>);\nMap&lt;String, String&gt; serviceMeta = <span class=\"hljs-keyword\">new</span> HashMap&lt;&gt;();\nserviceMeta.put(<span class=\"hljs-string\">\"symmetricCall\"</span>, <span class=\"hljs-string\">\"true\"</span>);\nservice.setMetadata(serviceMeta);\ninstance.setService(service);\n\nCluster cluster = <span class=\"hljs-keyword\">new</span> Cluster();\ncluster.setName(<span class=\"hljs-string\">\"TEST5\"</span>);\nAbstractHealthChecker.Http healthChecker = <span class=\"hljs-keyword\">new</span> AbstractHealthChecker.Http();\nhealthChecker.setCheckCode(<span class=\"hljs-number\">400</span>);\nhealthChecker.setCurlHost(<span class=\"hljs-string\">\"USer-Agent|Nacos\"</span>);\nhealthChecker.setCurlPath(<span class=\"hljs-string\">\"/xxx.html\"</span>);\ncluster.setHealthChecker(healthChecker);\nMap&lt;String, String&gt; clusterMeta = <span class=\"hljs-keyword\">new</span> HashMap&lt;&gt;();\nclusterMeta.put(<span class=\"hljs-string\">\"xxx\"</span>, <span class=\"hljs-string\">\"yyyy\"</span>);\ncluster.setMetadata(clusterMeta);\n\ninstance.setCluster(cluster);\n\nnaming.registerInstance(<span class=\"hljs-string\">\"nacos.test.4\"</span>, instance);\n</code></pre>\n<h2>注销实例</h2>\n<h3>描述</h3>\n<p>删除服务下的一个实例。</p>\n<pre><code class=\"language-java\">    <span class=\"hljs-comment\">/**\n     * Deregister instance from a service\n     *\n     * <span class=\"hljs-doctag\">@param</span> serviceName name of service\n     * <span class=\"hljs-doctag\">@param</span> ip          instance ip\n     * <span class=\"hljs-doctag\">@param</span> port        instance port\n     * <span class=\"hljs-doctag\">@throws</span> NacosException\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">deregisterInstance</span><span class=\"hljs-params\">(String serviceName, String ip, <span class=\"hljs-keyword\">int</span> port)</span> <span class=\"hljs-keyword\">throws</span> NacosException</span>;\n\n    <span class=\"hljs-comment\">/**\n     * Deregister instance with specified cluster name from a service\n     *\n     * <span class=\"hljs-doctag\">@param</span> serviceName name of service\n     * <span class=\"hljs-doctag\">@param</span> ip          instance ip\n     * <span class=\"hljs-doctag\">@param</span> port        instance port\n     * <span class=\"hljs-doctag\">@param</span> clusterName     instance cluster name\n     * <span class=\"hljs-doctag\">@throws</span> NacosException\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">deregisterInstance</span><span class=\"hljs-params\">(String serviceName, String ip, <span class=\"hljs-keyword\">int</span> port, String clusterName)</span> <span class=\"hljs-keyword\">throws</span> NacosException</span>;\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">名称</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">serviceName</td>\n<td style=\"text-align:left\">字符串</td>\n<td style=\"text-align:left\">服务名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ip</td>\n<td style=\"text-align:left\">字符串</td>\n<td style=\"text-align:left\">服务实例ip</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">port</td>\n<td style=\"text-align:left\">int</td>\n<td style=\"text-align:left\">服务实例port</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">clusterName</td>\n<td style=\"text-align:left\">字符串</td>\n<td style=\"text-align:left\">集群名</td>\n</tr>\n</tbody>\n</table>\n<h3>返回参数</h3>\n<p>无</p>\n<h3>请求示例</h3>\n<pre><code class=\"language-java\">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class=\"hljs-string\">\"serveAddr\"</span>));\nnaming.deregisterInstance(<span class=\"hljs-string\">\"nacos.test.3\"</span>, <span class=\"hljs-string\">\"11.11.11.11\"</span>, <span class=\"hljs-number\">8888</span>, <span class=\"hljs-string\">\"DEFAULT\"</span>);\n</code></pre>\n<h2>获取全部实例</h2>\n<h3>描述</h3>\n<p>获取服务下的所有实例。</p>\n<pre><code class=\"language-java\">    <span class=\"hljs-comment\">/**\n     * Get all instances of a service\n     *\n     * <span class=\"hljs-doctag\">@param</span> serviceName name of service\n     * <span class=\"hljs-doctag\">@return</span> A list of instance\n     * <span class=\"hljs-doctag\">@throws</span> NacosException\n     */</span>\n    <span class=\"hljs-function\">List&lt;Instance&gt; <span class=\"hljs-title\">getAllInstances</span><span class=\"hljs-params\">(String serviceName)</span> <span class=\"hljs-keyword\">throws</span> NacosException</span>;\n\n    <span class=\"hljs-comment\">/**\n     * Get all instances within specified clusters of a service\n     *\n     * <span class=\"hljs-doctag\">@param</span> serviceName name of service\n     * <span class=\"hljs-doctag\">@param</span> clusters    list of cluster\n     * <span class=\"hljs-doctag\">@return</span> A list of qualified instance\n     * <span class=\"hljs-doctag\">@throws</span> NacosException\n     */</span>\n    <span class=\"hljs-function\">List&lt;Instance&gt; <span class=\"hljs-title\">getAllInstances</span><span class=\"hljs-params\">(String serviceName, List&lt;String&gt; clusters)</span> <span class=\"hljs-keyword\">throws</span> NacosException</span>;\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">名称</th>\n<th style=\"text-align:left\">类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">serviceName</td>\n<td style=\"text-align:left\">字符串</td>\n<td>服务名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">clusters</td>\n<td style=\"text-align:left\">List</td>\n<td>集群列表</td>\n</tr>\n</tbody>\n</table>\n<h3>返回参数</h3>\n<p>List<Instance> 实例列表。</p>\n<h3>请求示例</h3>\n<pre><code class=\"language-java\">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class=\"hljs-string\">\"serveAddr\"</span>));\nSystem.out.println(naming.getAllInstances(<span class=\"hljs-string\">\"nacos.test.3\"</span>));\n</code></pre>\n<h2>获取健康或不健康实例列表</h2>\n<h3>描述</h3>\n<p>根据条件获取过滤后的实例列表。</p>\n<pre><code class=\"language-java\">    <span class=\"hljs-comment\">/**\n     * Get qualified instances of service\n     *\n     * <span class=\"hljs-doctag\">@param</span> serviceName name of service\n     * <span class=\"hljs-doctag\">@param</span> healthy     a flag to indicate returning healthy or unhealthy instances\n     * <span class=\"hljs-doctag\">@return</span> A qualified list of instance\n     * <span class=\"hljs-doctag\">@throws</span> NacosException\n     */</span>\n    <span class=\"hljs-function\">List&lt;Instance&gt; <span class=\"hljs-title\">selectInstances</span><span class=\"hljs-params\">(String serviceName, <span class=\"hljs-keyword\">boolean</span> healthy)</span> <span class=\"hljs-keyword\">throws</span> NacosException</span>;\n\n    <span class=\"hljs-comment\">/**\n     * Get qualified instances within specified clusters of service\n     *\n     * <span class=\"hljs-doctag\">@param</span> serviceName name of service\n     * <span class=\"hljs-doctag\">@param</span> clusters    list of cluster\n     * <span class=\"hljs-doctag\">@param</span> healthy     a flag to indicate returning healthy or unhealthy instances\n     * <span class=\"hljs-doctag\">@return</span> A qualified list of instance\n     * <span class=\"hljs-doctag\">@throws</span> NacosException\n     */</span>\n    <span class=\"hljs-function\">List&lt;Instance&gt; <span class=\"hljs-title\">selectInstances</span><span class=\"hljs-params\">(String serviceName, List&lt;String&gt; clusters, <span class=\"hljs-keyword\">boolean</span> healthy)</span> <span class=\"hljs-keyword\">throws</span> NacosException</span>;\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">名称</th>\n<th style=\"text-align:left\">类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">serviceName</td>\n<td style=\"text-align:left\">字符串</td>\n<td>服务名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">clusters</td>\n<td style=\"text-align:left\">List</td>\n<td>集群列表</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">healthy</td>\n<td style=\"text-align:left\">boolean</td>\n<td>是否健康</td>\n</tr>\n</tbody>\n</table>\n<h3>返回参数</h3>\n<p>List<Instance> 实例列表。</p>\n<h3>请求示例</h3>\n<pre><code class=\"language-java\">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class=\"hljs-string\">\"serveAddr\"</span>));\nSystem.out.println(naming.selectInstances(<span class=\"hljs-string\">\"nacos.test.3\"</span>, <span class=\"hljs-keyword\">true</span>));\n</code></pre>\n<h2>获取一个健康实例</h2>\n<h3>描述</h3>\n<p>根据负载均衡算法随机获取一个健康实例。</p>\n<pre><code class=\"language-java\">    <span class=\"hljs-comment\">/**\n     * Select one healthy instance of service using predefined load balance strategy\n     *\n     * <span class=\"hljs-doctag\">@param</span> serviceName name of service\n     * <span class=\"hljs-doctag\">@return</span> qualified instance\n     * <span class=\"hljs-doctag\">@throws</span> NacosException\n     */</span>\n    <span class=\"hljs-function\">Instance <span class=\"hljs-title\">selectOneHealthyInstance</span><span class=\"hljs-params\">(String serviceName)</span> <span class=\"hljs-keyword\">throws</span> NacosException</span>;\n\n    <span class=\"hljs-comment\">/**\n     * Select one healthy instance of service using predefined load balance strategy\n     *\n     * <span class=\"hljs-doctag\">@param</span> serviceName name of service\n     * <span class=\"hljs-doctag\">@param</span> clusters    a list of clusters should the instance belongs to\n     * <span class=\"hljs-doctag\">@return</span> qualified instance\n     * <span class=\"hljs-doctag\">@throws</span> NacosException\n     */</span>\n    <span class=\"hljs-function\">Instance <span class=\"hljs-title\">selectOneHealthyInstance</span><span class=\"hljs-params\">(String serviceName, List&lt;String&gt; clusters)</span> <span class=\"hljs-keyword\">throws</span> NacosException</span>;\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">名称</th>\n<th style=\"text-align:left\">类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">serviceName</td>\n<td style=\"text-align:left\">字符串</td>\n<td>服务名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">clusters</td>\n<td style=\"text-align:left\">List</td>\n<td>集群列表</td>\n</tr>\n</tbody>\n</table>\n<h3>返回参数</h3>\n<p>Instance 实例。</p>\n<h3>请求示例</h3>\n<pre><code class=\"language-java\">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class=\"hljs-string\">\"serveAddr\"</span>));\nSystem.out.println(naming.selectOneHealthyInstance(<span class=\"hljs-string\">\"nacos.test.3\"</span>));\n</code></pre>\n<h2>监听服务</h2>\n<h3>描述</h3>\n<p>监听服务下的实例列表变化。</p>\n<pre><code class=\"language-java\">    <span class=\"hljs-comment\">/**\n     * Subscribe service to receive events of instances alteration\n     *\n     * <span class=\"hljs-doctag\">@param</span> serviceName name of service\n     * <span class=\"hljs-doctag\">@param</span> listener    event listener\n     * <span class=\"hljs-doctag\">@throws</span> NacosException\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">subscribe</span><span class=\"hljs-params\">(String serviceName, EventListener listener)</span> <span class=\"hljs-keyword\">throws</span> NacosException</span>;\n\n    <span class=\"hljs-comment\">/**\n     * Subscribe service to receive events of instances alteration\n     *\n     * <span class=\"hljs-doctag\">@param</span> serviceName name of service\n     * <span class=\"hljs-doctag\">@param</span> clusters    list of cluster\n     * <span class=\"hljs-doctag\">@param</span> listener    event listener\n     * <span class=\"hljs-doctag\">@throws</span> NacosException\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">subscribe</span><span class=\"hljs-params\">(String serviceName, List&lt;String&gt; clusters, EventListener listener)</span> <span class=\"hljs-keyword\">throws</span> NacosException</span>;\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">名称</th>\n<th style=\"text-align:left\">类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">serviceName</td>\n<td style=\"text-align:left\">字符串</td>\n<td>服务名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">clusters</td>\n<td style=\"text-align:left\">List</td>\n<td>集群列表</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">listener</td>\n<td style=\"text-align:left\">EventListener</td>\n<td>回调listener</td>\n</tr>\n</tbody>\n</table>\n<h3>返回参数</h3>\n<p>无</p>\n<h3>请求示例</h3>\n<pre><code class=\"language-java\">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class=\"hljs-string\">\"serveAddr\"</span>));\nnaming.subscribe(<span class=\"hljs-string\">\"nacos.test.3\"</span>, event -&gt; {\n    <span class=\"hljs-keyword\">if</span> (event <span class=\"hljs-keyword\">instanceof</span> NamingEvent) {\n        System.out.println(((NamingEvent) event).getServceName());\n        System.out.println(((NamingEvent) event).getInstances());\n    }\n});\n</code></pre>\n<h2>取消监听服务</h2>\n<h3>描述</h3>\n<p>取消监听服务下的实例列表变化。</p>\n<pre><code class=\"language-java\">    <span class=\"hljs-comment\">/**\n     * Unsubscribe event listener of service\n     *\n     * <span class=\"hljs-doctag\">@param</span> serviceName name of service\n     * <span class=\"hljs-doctag\">@param</span> listener    event listener\n     * <span class=\"hljs-doctag\">@throws</span> NacosException\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">unsubscribe</span><span class=\"hljs-params\">(String serviceName, EventListener listener)</span> <span class=\"hljs-keyword\">throws</span> NacosException</span>;\n\n    <span class=\"hljs-comment\">/**\n     * Unsubscribe event listener of service\n     *\n     * <span class=\"hljs-doctag\">@param</span> serviceName name of service\n     * <span class=\"hljs-doctag\">@param</span> clusters    list of cluster\n     * <span class=\"hljs-doctag\">@param</span> listener    event listener\n     * <span class=\"hljs-doctag\">@throws</span> NacosException\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">unsubscribe</span><span class=\"hljs-params\">(String serviceName, List&lt;String&gt; clusters, EventListener listener)</span> <span class=\"hljs-keyword\">throws</span> NacosException</span>;\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">名称</th>\n<th style=\"text-align:left\">类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">serviceName</td>\n<td style=\"text-align:left\">字符串</td>\n<td>服务名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">clusters</td>\n<td style=\"text-align:left\">List</td>\n<td>集群列表</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">listener</td>\n<td style=\"text-align:left\">EventListener</td>\n<td>回调listener</td>\n</tr>\n</tbody>\n</table>\n<h3>返回参数</h3>\n<p>无</p>\n<h3>请求示例</h3>\n<pre><code class=\"language-java\">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class=\"hljs-string\">\"serveAddr\"</span>));\nnaming.unsubscribe(<span class=\"hljs-string\">\"nacos.test.3\"</span>, event -&gt; {});\n</code></pre>\n"
    },
    {
      "filename": "what-is-nacos.md",
      "__html": "<h1>What is Nacos</h1>\n<h2>Overview</h2>\n<p>Welcome to Nacos!</p>\n<p>Nacos is all things about discovery, config and manage your micro-services. Nacos provides users with an easy-to-use feature set for dynamic service discovery, service configuration management, service provisioning and management.</p>\n<p>Nacos help users to build, deliver and manage their micro-services platform more agile and easier.</p>\n<p>Nacos is an infrastructure when build modern service centric application by using micro-services or cloud-native approaches.</p>\n<h2>What is Nacos?</h2>\n<p>Service is a first-class citizen in Nacos. Nacos support almost all type of services, for example: Kubernetes service, gRPC/Dubbo service or RESTFul service.</p>\n<p>The key features of Consul are:</p>\n<ul>\n<li><strong>Service Discovery And Service Health Check</strong></li>\n</ul>\n<p>Nacos supports both DNS-based and RPC-based (eg Dubbo/gRPC) service discovery, producer can register a service with <a href=\"\">native sdk</a> or <a href=\"\">openAPI</a> or with <a href=\"\">a dedicated agent</a>, consumer can discovery this service with either DNS or HTTP.</p>\n<p>Nacos also provide real-time health checks of services to prevent sending requests to unhealthy hosts, Nacos support multi-level health check, for example, 4-layer (tcp) or 7-layer(http, redis, mysql), with complex network topology, Nacos support both agent mode or server mode health check. Nacos also provide a unity service health dashboard when use with Kubernetes or spring cloud.</p>\n<ul>\n<li><strong>Dynamic Configuration Management</strong></li>\n</ul>\n<p>Dynamic Configuration Service allows you to manage the configuration of all applications or services in a centralized and dynamic manner in all environments.</p>\n<p>Dynamic configuration eliminates the need to redeploy applications and services when configuring updates.</p>\n<p>It can be more convenient to help you achieve stateless services and more easily achieve on-demand elastic expansion of service instances.</p>\n<p>Naocs provide an easy-to-use UI to help you management all of your configurations and provide\nsome out-of-box features such as config version track, gray release and rollback, client push status tracking etc.</p>\n<ul>\n<li><strong>Dynamic DNS Service</strong></li>\n</ul>\n<p>Dynamic DNS services that support weighted routing make it easier for you to implement mid-tier load balancing, flexible routing policies, flow control, and simple DNS resolution services in your production environment within your data center, helping you to more easily implement DNS-based Service discovery.</p>\n<ul>\n<li><strong>Service and MetaData Management</strong></li>\n</ul>\n<p>Service management support manages all services and their metadata from the perspective of the microservices platform. This includes the service description file, life cycle, static data center topology, service health status, traffic, routing and security rules, SLA, and first line Metrics et al.</p>\n<p>you can more Nacos features with <a href=\"\">features list</a></p>\n<h2>Nacos and Other Open Sources ecology</h2>\n<p>[ͼƬ]</p>\n<p>As the above Nacos landscape shows, Nacos seamless support many open source platform,\nsuch as Dubbo, Spring Cloud, kubernetes and service mesh.</p>\n<p>With Nacos, you can take advantage of various aspects of Nacos' capabilities to simplify solutions in service discovery, configuration management more easilier to manage microservices on these platforms.</p>\n<p>for more information, you can check with following:</p>\n<ul>\n<li><a href=\"\">use Nacos with Kubernetes</a></li>\n<li><a href=\"\">use Nacos with Dubbo</a></li>\n<li><a href=\"\">use Nacos with Spring Cloud</a></li>\n<li><a href=\"\">using Nacos with service mesh</a></li>\n</ul>\n<h2>Basic Architecture and Concepts</h2>\n<ul>\n<li><strong>Naming Service/Service Registry</strong></li>\n<li><strong>Configuration</strong>  define aa</li>\n<li><strong>Service MetaData</strong>  define aa</li>\n<li><strong>Producer</strong>  define aa</li>\n<li><strong>Consumer</strong>   define aa</li>\n<li>...</li>\n</ul>\n<h2>What's next</h2>\n<p>Continue onwards with [the getting started guide] () to get Consul up and running.</p>\n"
    }
  ],
  "en-us": [
    {
      "filename": "concepts.md",
      "__html": "<h1>Public content</h1>\n<p>Namespace in ACM is used for the isolation of configurations by tenants. Different namespaces may have configurations with the same Group or Data ID. One of the common scenarios of namespace is to differentiate and isolate configurations in different environments, such as development and test environment or production environment.</p>\n<h1>Configuration Management</h1>\n<h2>Configuration</h2>\n<p>During system development, developers usually extract some parameters or variables that need to be changed from the code and manage them in a separate configuration file. This enables the static system artifacts or deliverables (such as WAR and JAR packages) to fit with the physical operating environment in a better way. Configuration management is generally a part of the system deployment process, which is completed by the system administrator or maintenance personnel. Configuration modification is one of the most effective methods to adjust the behavior of a running system.</p>\n<h2>Configuration management</h2>\n<p>In the data center, all configuration-related activities such as editing, storage, distribution, change management, history version management, and change audit are collectively referred to as configuration management.</p>\n<h2>Configuration item</h2>\n<p>It is a specific configurable parameter with its value range, usually in the form of param-key=param-value. For example, the log output level (logLevel=INFO|WARN|ERROR) of a system is regarded as a configuration item.</p>\n<h2>Configuration se</h2>\n<p>A collection of related or unrelated configuration items is called a configuration set. Usually a configuration file in the system is a configuration set which contains configurations of all aspects of the system. For example, a configuration set may contain configuration items such as data sources, thread pools, and log levels.</p>\n<h2>Data ID</h2>\n<p>The ID of a configuration set in ACM. It is one of the dimensions according to which configurations are organized. Data ID is generally used to organize the system configuration sets. A system or application can contain multiple configuration sets, each of which can be identified by a meaningful name. The Data ID usually uses the naming rule similar to Java packages (for example, com.taobao.tc.refund.log.level) to ensure global uniqueness. This naming rule is not mandatory.</p>\n<h2>Group</h2>\n<p>The group of configuration sets in ACM. It is one of the dimensions according to which configurations are organized. The configuration sets are always grouped by a meaningful string such as Buy or Trade to differentiate the configuration sets with the same Data ID. When you create a configuration on ACM, the group name is replaced by DEFAULT_GROUP by default if not specified. A typical scenario of Group is when the same configuration type is used for different applications or components, such as database_url configuration and MQ_topic configuration.</p>\n<h2>Configuration snapshot</h2>\n<p>The ACM client SDK can generate snapshots of configurations on local machines. Snapshots can be used to indicate the overall disaster recovery capabilities of the system when the client cannot connect to the ACM server. Configuration snapshot is similar to local commit in Git, or cache, which is updated at the appropriate time, but does not have the notion of expiration as in cache.</p>\n<h2>Service Discovery</h2>\n<h3>Service Metadata</h3>\n<p>Customized configuration of service, such as disaster recovery, authentication configuration and tags.</p>\n<h3>Application</h3>\n<p>Application is a property of service which can be used to identify the identity of the service provider.</p>\n<h3>Virtual Cluster</h3>\n<p>Service instances under the same service can be further classified. One possible unit of this classification is Virtual Cluster.</p>\n<h3>Virtual Cluster Metadata</h3>\n<p>Custom configuration at the Virtual Cluster level. This configuration takes effect for the instance in the same Virtual Cluster.</p>\n<h3>Default Port</h3>\n<p>One of the virtual cluster configurations, which indicates that the instance registered in the virtual cluster uses this default port to provide services if no port is specified.</p>\n<h3>Use Port of IP for Health Check</h3>\n<p>One of the virtual cluster configurations indicates whether to use the registered port of the instance for health check.</p>\n<h3>Default Check Port</h3>\n<p>One of the virtual cluster configurations indicates the default port for health check of the instances in the virtual cluster. When the registered port is specified disabled for health check, the default port is used for health check.</p>\n<h3>Instance</h3>\n<p>A process with an accessible network address (IP:Port) that provides one or more services.</p>\n<h3>Instance Metadata</h3>\n<p>Instance level custom configuration.</p>\n<h3>Weight</h3>\n<p>Instance-level configuration, the weight is a floating-point number. The greater the weight, the greater the traffic that the instance expects to be allocated.</p>\n<h3>Health Check</h3>\n<p>Check the health of the instance under service in a specified manner to confirm whether the instance can provide services. According to the inspection results, the instances are judged to be healthy or unhealthy. Unhealthy instances are not returned to the client when initiating a resolution request to the service.</p>\n<h3>Protect Threshold</h3>\n<p>In order to prevent traffic from flowing to healthy instances due to unhealthy conditions in some instances, and then causing flow pressure to collapse healthy instances and create avalanche effects, the health protection threshold should be defined a floating point number between 0 and 1. When the proportion of the domain name healthy instance to the total instance is smaller than this value, the instance is returned to the client regardless of whether the instance is healthy. Although this will result in a loss of some of the traffic, it will ensure that the remaining health instances will work properly.</p>\n"
    },
    {
      "filename": "contributing.md",
      "__html": "<h2>How To Contribute</h2>\n<p>We are always very happy to have contributions, whether for trivial cleanups or big new features.\nWe want to have high quality, well documented codes for each programming language.</p>\n<p>Nor is code the only way to contribute to the project. We strongly value documentation, integration with other project, and gladly accept improvements for these aspects.</p>\n<h2>Contributing code</h2>\n<p>To submit a change for inclusion, please do the following:</p>\n<h4>If the change is non-trivial please include some unit tests that cover the new functionality.</h4>\n<h4>If you are introducing a completely new feature or API it is a good idea to start a wiki and get consensus on the basic design first.</h4>\n<h4>It is our job to follow up on patches in a timely fashion. Nag us if we aren't doing our job (sometimes we drop things).</h4>\n<h2>Becoming a Committer</h2>\n<p>We are always interested in adding new contributors. What we look for are series of contributions, good taste and ongoing interest in the project. If you are interested in becoming a committer, please let one of the existing committers know and they can help you walk through the process.</p>\n<p>Nowadays,we have several important contribution points:</p>\n<h4>Wiki &amp; JavaDoc</h4>\n<h4>Nacos Console</h4>\n<h4>Nacos SDK(<a href=\"http://C++.Net\">C++.Net</a>\\Php\\Python\\Go\\Node.js)</h4>\n<h5>Prerequisite</h5>\n<p>If you want to contribute the above listing points, you must abide our some prerequisites:</p>\n<h6>Readability - API must have Javadoc,some very important methods also must have javadoc</h6>\n<h6>Testability - 80% above unit test coverage about main process</h6>\n<h6>Maintainability - Comply with our <a href=\"style/codeStyle.xml\">PMD spec</a>, and at least 3 month update frequency</h6>\n<h6>Deployability - We encourage you to deploy into <a href=\"http://search.maven.org/\">maven repository</a></h6>\n"
    },
    {
      "filename": "open-API.md",
      "__html": "<h1>Configaration Management</h1>\n<h2>Get configurations</h2>\n<h3>Description</h3>\n<p>This API is used to get configurations in Nacos.</p>\n<h3>Request type</h3>\n<p>GET</p>\n<h3>Request URL</h3>\n<p>/nacos/config.co</p>\n<h3>Request parameters</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Type</th>\n<th style=\"text-align:left\">Required</th>\n<th style=\"text-align:left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">tenant</td>\n<td style=\"text-align:left\">string</td>\n<td style=\"text-align:left\">No</td>\n<td style=\"text-align:left\">Tenant information. It corresponds to the Namespace field in Nacos.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">dataId</td>\n<td style=\"text-align:left\">string</td>\n<td style=\"text-align:left\">Yes</td>\n<td style=\"text-align:left\">Configuration ID.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">group</td>\n<td style=\"text-align:left\">string</td>\n<td style=\"text-align:left\">Yes</td>\n<td style=\"text-align:left\">Configuration group</td>\n</tr>\n</tbody>\n</table>\n<h3>Return parameters</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Parameter type</th>\n<th style=\"text-align:left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">Configuration value</td>\n</tr>\n</tbody>\n</table>\n<h3>Error codes</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Error code</th>\n<th style=\"text-align:left\">Description</th>\n<th style=\"text-align:left\">Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">400</td>\n<td style=\"text-align:left\">Bad Request</td>\n<td style=\"text-align:left\">Syntax error in the client request</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">403</td>\n<td style=\"text-align:left\">Forbidden</td>\n<td style=\"text-align:left\">No permission</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">404</td>\n<td style=\"text-align:left\">Not Found</td>\n<td style=\"text-align:left\">Client error, not found</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">500</td>\n<td style=\"text-align:left\">Internal Server Error</td>\n<td style=\"text-align:left\">Internal server error</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">200</td>\n<td style=\"text-align:left\">OK</td>\n<td style=\"text-align:left\">Normal</td>\n</tr>\n</tbody>\n</table>\n<h3>Example</h3>\n<ul>\n<li>\n<p>Request example</p>\n<pre><code>http:serverIp:8080/nacos/config.co?dataId=dataIdparam&amp;group=groupParam&amp;tenant=tenantParam\n\n</code></pre>\n</li>\n<li>\n<p>Return example</p>\n<pre><code>contentTest\n</code></pre>\n</li>\n</ul>\n<h2>Listen for configurations</h2>\n<h3>Description</h3>\n<p>This API is used to listen for configurations in Nacos to capture the configuration changes. In case of any configuration changes, you can use the <a href=\"~~64131~~\">Get Configurations</a> API to obtain the latest value of the configuration and dynamically refresh the local cache.</p>\n<p>A listener is registered using an asynchronous servlet. The nature of registering a listener is to compare the configuration value and the MD5 value of it with that of the backend. If the values differ, the inconsistent configuration is returned immediately. Otherwise, an empty string is returned after 30 seconds.</p>\n<h3>Request type</h3>\n<p>POST</p>\n<h3>Request URL</h3>\n<p>/nacos/config.co</p>\n<h3>Request parameters</h3>\n<div class=\"bi-table\">\n  <table>\n    <colgroup>\n      <col width=\"auto\" />\n      <col width=\"auto\" />\n      <col width=\"auto\" />\n      <col width=\"auto\" />\n    </colgroup>\n    <tbody>\n      <tr>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">Name</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">Type</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">Required</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">Description</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">Probe-Modify-Request</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">string</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">No</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">A request to listen for data packets. Format : dataId^group^2contentMD5^tenant^1 or dataId^group^2contentMD5^1.</div>\n          <ul data-type=\"unordered-list\">\n            <li data-type=\"list-item\" data-list-type=\"unordered-list\">\n              <div data-type=\"p\">dataId : Configuration ID</div>\n            </li>\n            <li data-type=\"list-item\" data-list-type=\"unordered-list\">\n              <div data-type=\"p\">group : Configuration group</div>\n            </li>\n            <li data-type=\"list-item\" data-list-type=\"unordered-list\">\n              <div data-type=\"p\">contentMD5 : The MD5 value of the configuration</div>\n            </li>\n            <li data-type=\"list-item\" data-list-type=\"unordered-list\">\n              <div data-type=\"p\">tenant : Tenant information. It corresponds to the Namespace field in Nacos (not must)</div>\n            </li>\n          </ul>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">Probe-Modify-Request</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">string</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">Yes</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">A request to listen for data packets.</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">tenant</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">string</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">Yes</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">A packet field indicating tenant information. It corresponds to the Namespace field in Nacos.</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">dataId</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">string</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">Yes</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">A packet field indicating the configuration ID.</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">group</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">string</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">Yes</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">A packet field indicating the configuration group.</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">contentMD5</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">string</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">Yes</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">A packet field indicating the MD5 value of the configuration.</div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n<h3>Header parameters</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Type</th>\n<th style=\"text-align:left\">Required</th>\n<th style=\"text-align:left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">longPullingTimeout</td>\n<td style=\"text-align:left\">string</td>\n<td style=\"text-align:left\">Yes</td>\n<td style=\"text-align:left\">The time-out for long polling is 30s. Enter 30,000 here.</td>\n</tr>\n</tbody>\n</table>\n<h3>Parameter description</h3>\n<ul>\n<li>A delimiter to separate fields within a configuration: ^2  = Character.toString((char) 2</li>\n<li>A delimiter to separate configurations: ^1 = Character.toString((char) 1)</li>\n<li>contentMD5:  MD5(content). This is an empty string because the first local cache is empty.</li>\n</ul>\n<h3>Return parameters</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Parameter type</th>\n<th style=\"text-align:left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">Configuration value</td>\n</tr>\n</tbody>\n</table>\n<h3>Error codes</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Error code</th>\n<th style=\"text-align:left\">Description</th>\n<th style=\"text-align:left\">Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">400</td>\n<td style=\"text-align:left\">Bad Request</td>\n<td style=\"text-align:left\">Syntax error in the client request</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">403</td>\n<td style=\"text-align:left\">Forbidden</td>\n<td style=\"text-align:left\">No permission</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">404</td>\n<td style=\"text-align:left\">Not Found</td>\n<td style=\"text-align:left\">Client error, not found</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">500</td>\n<td style=\"text-align:left\">Internal Server Error</td>\n<td style=\"text-align:left\">Internal server error</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">200</td>\n<td style=\"text-align:left\">OK</td>\n<td style=\"text-align:left\">Normal</td>\n</tr>\n</tbody>\n</table>\n<h3>Example</h3>\n<ul>\n<li>Request example</li>\n</ul>\n<pre><code>http://serverIp:8080/nacos/config.co\n\nPOST request body data:\n\nProbe-Modify-Request=dataId^2group^2contentMD5^2tenant^1\n\n</code></pre>\n<ul>\n<li>Return example</li>\n</ul>\n<pre><code>In case of any configuration changes,\n\ndataId^2group^2tenant^1\n\nOtherwise, an empty string is returned.\n\n</code></pre>\n<h2>Publish configuration</h2>\n<h3>Description</h3>\n<p>It publishes configurations on Nacos.</p>\n<h3>Request Type</h3>\n<p>POST</p>\n<h3>Request URL</h3>\n<p><code>/nacos/basestone.do</code></p>\n<h3>Request parameters</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Type</th>\n<th style=\"text-align:left\">Required</th>\n<th style=\"text-align:left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">tenant</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">No</td>\n<td style=\"text-align:left\">The tenant, corresponding to the namespace field of Nacos</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">dataId</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">Yes</td>\n<td style=\"text-align:left\">Configuration ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">group</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">Yes</td>\n<td style=\"text-align:left\">Configuration group</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">content</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">Yes</td>\n<td style=\"text-align:left\">Configuration content</td>\n</tr>\n</tbody>\n</table>\n<h3>Response parameters</h3>\n<table>\n<thead>\n<tr>\n<th>Parametertype</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>boolean</td>\n<td>If the publishing is successful</td>\n</tr>\n</tbody>\n</table>\n<h3>Error code</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Error code</th>\n<th style=\"text-align:left\">Description</th>\n<th style=\"text-align:left\">Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">400</td>\n<td style=\"text-align:left\">Bad Request</td>\n<td style=\"text-align:left\">Syntax error in client request</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">403</td>\n<td style=\"text-align:left\">Forbidden</td>\n<td style=\"text-align:left\">No permission</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">404</td>\n<td style=\"text-align:left\">Not Found</td>\n<td style=\"text-align:left\">Client error, not found</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">500</td>\n<td style=\"text-align:left\">Internal Server Error</td>\n<td style=\"text-align:left\">Internal server error</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">200</td>\n<td style=\"text-align:left\">OK</td>\n<td style=\"text-align:left\">Normal</td>\n</tr>\n</tbody>\n</table>\n<h3>Example</h3>\n<h3>Request example</h3>\n<pre><code>http:serverIp:8080/nacos/basestone.do?method=syncUpdateAll\n\nhttp body：\ndataId=dataIdparam&amp;group=groupParam&amp;tenant=tenantParam&amp;content=contentParam\n\n</code></pre>\n<h4>Response example</h4>\n<pre><code>true\n</code></pre>\n<h2>Delete configuration</h2>\n<h3>Description</h3>\n<p>It deletes configurations on Nacos.</p>\n<h3>Request Type</h3>\n<p>POST</p>\n<h3>Request URL</h3>\n<p><code>/nacos/datum.do</code></p>\n<h3>Request parameters</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Type</th>\n<th style=\"text-align:left\">Required</th>\n<th style=\"text-align:left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">tenant</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">No</td>\n<td style=\"text-align:left\">The tenant, corresponding to the namespace field of Nacos</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">dataId</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">Yes</td>\n<td style=\"text-align:left\">Configuration ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">group</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">Yes</td>\n<td style=\"text-align:left\">Configuration group</td>\n</tr>\n</tbody>\n</table>\n<h3>Response parameters</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Parameter type</th>\n<th style=\"text-align:left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">boolean</td>\n<td style=\"text-align:left\">If the deletion is successful</td>\n</tr>\n</tbody>\n</table>\n<h3>Error code</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Error code</th>\n<th style=\"text-align:left\">Description</th>\n<th style=\"text-align:left\">Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">400</td>\n<td style=\"text-align:left\">Bad Request</td>\n<td style=\"text-align:left\">Syntax error in client request</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">403</td>\n<td style=\"text-align:left\">Forbidden</td>\n<td style=\"text-align:left\">No permission</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">404</td>\n<td style=\"text-align:left\">Not Found</td>\n<td style=\"text-align:left\">Client error, not found</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">500</td>\n<td style=\"text-align:left\">Internal Server Error</td>\n<td style=\"text-align:left\">Internal server error</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">200</td>\n<td style=\"text-align:left\">OK</td>\n<td style=\"text-align:left\">Normal</td>\n</tr>\n</tbody>\n</table>\n<h3>Example</h3>\n<h4>Request example</h4>\n<pre><code>http:serverIp:8080/nacos/datum.do?method=deleteAllDatums\n\nhttp body：\ndataId=dataIdparam&amp;group=groupParam\n\n</code></pre>\n<h4>Response example</h4>\n<pre><code>true\n</code></pre>\n<h1>Service Discovery API</h1>\n<h2>Register Instance</h2>\n<h3>Description</h3>\n<p>Register an instance to service.</p>\n<h3>Request Type</h3>\n<p>PUT</p>\n<h3>Request Path</h3>\n<pre><code class=\"language-plain\">/nacos/naming/instance\n</code></pre>\n<h3>Request Parameters</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Type</th>\n<th style=\"text-align:left\">Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">ip</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">yes</td>\n<td>IP of instance</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">port</td>\n<td style=\"text-align:left\">int</td>\n<td style=\"text-align:left\">yes</td>\n<td>port of instance</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">tenant</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">no</td>\n<td>ID of tenant</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">weight</td>\n<td style=\"text-align:left\">double</td>\n<td style=\"text-align:left\">no</td>\n<td>Weight</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">healthy</td>\n<td style=\"text-align:left\">boolean</td>\n<td style=\"text-align:left\">no</td>\n<td>healthy or not</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">metadata</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">no</td>\n<td>extended information</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">cluster</td>\n<td style=\"text-align:left\">JSON String</td>\n<td style=\"text-align:left\">no</td>\n<td>cluster information</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">service</td>\n<td style=\"text-align:left\">JSON String</td>\n<td style=\"text-align:left\">yes if servicName not exist</td>\n<td>service information</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">serviceName</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">yes if service not exist</td>\n<td>service name</td>\n</tr>\n</tbody>\n</table>\n<p>format of service：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Type</th>\n<th style=\"text-align:left\">Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">name</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">yes</td>\n<td>service name</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">app</td>\n<td style=\"text-align:left\">int</td>\n<td style=\"text-align:left\">no</td>\n<td>application name</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">group</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">no</td>\n<td>service group</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">protectThreshold</td>\n<td style=\"text-align:left\">double</td>\n<td style=\"text-align:left\">no</td>\n<td>protect threshold</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">enableHealthCheck</td>\n<td style=\"text-align:left\">boolean</td>\n<td style=\"text-align:left\">no</td>\n<td>health check enabled or not</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">enableClientBeat</td>\n<td style=\"text-align:left\">boolean</td>\n<td style=\"text-align:left\">no</td>\n<td>client heart beat enabled or not</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">metadata</td>\n<td style=\"text-align:left\">JSON String</td>\n<td style=\"text-align:left\">no</td>\n<td>extended information</td>\n</tr>\n</tbody>\n</table>\n<p>format cluster：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Type</th>\n<th style=\"text-align:left\">Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">name</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">yes</td>\n<td>virtual cluster name</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">serviceName</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">yes</td>\n<td>service name of virtual cluster</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">healthChecker</td>\n<td style=\"text-align:left\">JSON String</td>\n<td style=\"text-align:left\">yes</td>\n<td>health check type</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">defaultPort</td>\n<td style=\"text-align:left\">int</td>\n<td style=\"text-align:left\">no</td>\n<td>default port of instance</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">defaultCheckPort</td>\n<td style=\"text-align:left\">int</td>\n<td style=\"text-align:left\">no</td>\n<td>default health check port of instance</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">userIPPort4Check</td>\n<td style=\"text-align:left\">boolean</td>\n<td style=\"text-align:left\">no</td>\n<td>if instance port used for health check</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">metadata</td>\n<td style=\"text-align:left\">JSON String</td>\n<td style=\"text-align:left\">no</td>\n<td>extended information</td>\n</tr>\n</tbody>\n</table>\n<p>healthChecker currently supports three types：TCP, HTTP and MYSQL。\nDepending on the type of type, there are differences in the parameters that need to be passed.</p>\n<p>TCP type：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Type</th>\n<th style=\"text-align:left\">Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">type=TCP</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">yes</td>\n<td>check type</td>\n</tr>\n</tbody>\n</table>\n<p>HTTP type：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Type</th>\n<th style=\"text-align:left\">Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">type=HTTP</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">yes</td>\n<td>check type</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">curlPath</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">yes</td>\n<td>check path</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">curlHost</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">no</td>\n<td>HTTP Header</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">checkCode</td>\n<td style=\"text-align:left\">int</td>\n<td style=\"text-align:left\">no, default value is 200</td>\n<td>expected return code</td>\n</tr>\n</tbody>\n</table>\n<p>MYSQL type：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Type</th>\n<th style=\"text-align:left\">Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">type=MYSQL</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">yes</td>\n<td>check type</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">user</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">yes</td>\n<td>mysql user name</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">pwd</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">yes</td>\n<td>mysql password</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">cmd</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">yes</td>\n<td>sql to execute</td>\n</tr>\n</tbody>\n</table>\n<h3>Request Example</h3>\n<pre><code class=\"language-plain\">curl -X PUT 'http://127.0.0.1:8080/nacos/naming/instance?cluster=%7b%22metadata%22%3a%7b%7d%2c%22defaultCheckPort%22%3a80%2c%22defaultPort%22%3a80%2c%22healthChecker%22%3a%7b%22type%22%3a%22TCP%22%7d%2c%22name%22%3a%22%22%2c%22useIPPort4Check%22%3atrue%7d&amp;port=8080&amp;healthy=true&amp;ip=11.11.11.11&amp;weight=1.0&amp;serviceName=nacos.test.3&amp;encoding=GBK&amp;tenant=n1''\n</code></pre>\n<h3>Response Example</h3>\n<p>ok</p>\n<h2>Deregister Instance</h2>\n<h3>Description</h3>\n<p>Delete instacne from service.</p>\n<h3>Request Type</h3>\n<p>DELETE</p>\n<h3>Request Path</h3>\n<pre><code class=\"language-plain\">/nacos/naming/instance\n</code></pre>\n<h3>Request Parameters</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Type</th>\n<th style=\"text-align:left\">Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">serviceName</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">yes</td>\n<td>service name</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ip</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">yes</td>\n<td>IP of instance</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">port</td>\n<td style=\"text-align:left\">int</td>\n<td style=\"text-align:left\">yes</td>\n<td>port of instance</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">cluster</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">yes</td>\n<td>cluster name</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">tenant</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">no</td>\n<td>ID of tenant</td>\n</tr>\n</tbody>\n</table>\n<h3>Request Example</h3>\n<pre><code class=\"language-plain\">curl -X DELETE 127.0.0.1:8080/nacos/naming/instance?serviceName=nacos.test.1&amp;ip=1.1.1.1&amp;port=8888&amp;cluster=TEST1\n</code></pre>\n<h3>Response Example</h3>\n<p>ok</p>\n<h2>Modify Instance</h2>\n<h3>Description</h3>\n<p>Modify an instance of service.</p>\n<h3>Request Type</h3>\n<p>POST</p>\n<h3>Request Path</h3>\n<pre><code class=\"language-plain\">/nacos/naming/instance\n</code></pre>\n<h3>Request Parameters</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Type</th>\n<th style=\"text-align:left\">Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">serviceName</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">yes</td>\n<td>service name</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ip</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">yes</td>\n<td>IP of instance</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">port</td>\n<td style=\"text-align:left\">int</td>\n<td style=\"text-align:left\">yes</td>\n<td>port of instance</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">cluster</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">yes</td>\n<td>cluster name</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">tenant</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">no</td>\n<td>ID of tenant</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">weight</td>\n<td style=\"text-align:left\">double</td>\n<td style=\"text-align:left\">no</td>\n<td>weight</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">metadata</td>\n<td style=\"text-align:left\">JSON</td>\n<td style=\"text-align:left\">no</td>\n<td>extended information</td>\n</tr>\n</tbody>\n</table>\n<h3>Request Example</h3>\n<pre><code class=\"language-plain\">curl -X POST 127.0.0.1:8080/nacos/naming/instance?serviceName=nacos.test.1&amp;ip=1.1.1.1&amp;port=8888&amp;cluster=TEST1&amp;weight=8&amp;metadata={}\n</code></pre>\n<h3>Response Example</h3>\n<p>ok</p>\n<h2>Query Instances</h2>\n<h3>Description</h3>\n<p>Query instance list of service.</p>\n<h3>Request Type</h3>\n<p>GET</p>\n<h3>Request Path</h3>\n<pre><code class=\"language-plain\">/nacos/naming/instances\n</code></pre>\n<h3>Request Parameters</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Type</th>\n<th style=\"text-align:left\">Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">serviceName</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">yes</td>\n<td>service name</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">tenant</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">no</td>\n<td>ID of tenant</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">clusters</td>\n<td style=\"text-align:left\">String, splited by comma</td>\n<td style=\"text-align:left\">no</td>\n<td>cluster name</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">healthyOnly</td>\n<td style=\"text-align:left\">boolean</td>\n<td style=\"text-align:left\">no, default value is false</td>\n<td>Return healthy instacne or not</td>\n</tr>\n</tbody>\n</table>\n<h3>Request Example</h3>\n<pre><code class=\"language-plain\">curl -X GET 127.0.0.1:8080/nacos/naming/instances?serviceName=nacos.test.1\n</code></pre>\n<h3>Response Example</h3>\n<pre><code class=\"language-json\">{\n\t<span class=\"hljs-attr\">\"dom\"</span>: <span class=\"hljs-string\">\"nacos.test.1\"</span>,\n\t<span class=\"hljs-attr\">\"cacheMillis\"</span>: <span class=\"hljs-number\">1000</span>,\n\t<span class=\"hljs-attr\">\"useSpecifiedURL\"</span>: <span class=\"hljs-literal\">false</span>,\n\t<span class=\"hljs-attr\">\"hosts\"</span>: [{\n\t\t<span class=\"hljs-attr\">\"valid\"</span>: <span class=\"hljs-literal\">true</span>,\n\t\t<span class=\"hljs-attr\">\"marked\"</span>: <span class=\"hljs-literal\">false</span>,\n\t\t<span class=\"hljs-attr\">\"instanceId\"</span>: <span class=\"hljs-string\">\"10.10.10.10-8888-DEFAULT-nacos.test.1\"</span>,\n\t\t<span class=\"hljs-attr\">\"port\"</span>: <span class=\"hljs-number\">8888</span>,\n\t\t<span class=\"hljs-attr\">\"ip\"</span>: <span class=\"hljs-string\">\"10.10.10.10\"</span>,\n\t\t<span class=\"hljs-attr\">\"weight\"</span>: <span class=\"hljs-number\">1.0</span>,\n\t\t<span class=\"hljs-attr\">\"metadata\"</span>: {}\n\t}],\n\t<span class=\"hljs-attr\">\"checksum\"</span>: <span class=\"hljs-string\">\"3bbcf6dd1175203a8afdade0e77a27cd1528787794594\"</span>,\n\t<span class=\"hljs-attr\">\"lastRefTime\"</span>: <span class=\"hljs-number\">1528787794594</span>,\n\t<span class=\"hljs-attr\">\"env\"</span>: <span class=\"hljs-string\">\"\"</span>,\n\t<span class=\"hljs-attr\">\"clusters\"</span>: <span class=\"hljs-string\">\"\"</span>\n}\n</code></pre>\n<h2>Query Instance Detail</h2>\n<h3>Description</h3>\n<p>Query instacne detail of service.</p>\n<h3>Request Type</h3>\n<p>GET</p>\n<h3>Request Path</h3>\n<pre><code class=\"language-plain\">/nacos/naming/instance\n</code></pre>\n<h3>Request Parameters</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Type</th>\n<th style=\"text-align:left\">Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">serviceName</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">yes</td>\n<td>service name</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ip</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">yes</td>\n<td>IP of instance</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">port</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">yes</td>\n<td>port of instance</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">tenant</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">no</td>\n<td>ID of tenant</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">clusters</td>\n<td style=\"text-align:left\">String, splited by comma</td>\n<td style=\"text-align:left\">no</td>\n<td>cluster name</td>\n</tr>\n</tbody>\n</table>\n<h3>Request Example</h3>\n<pre><code class=\"language-plain\">curl -X GET '127.0.0.1:8080/nacos/naming/instance?serviceName=nacos.test.2&amp;ip=10.10.10.10&amp;port=8888&amp;cluster=DEFAULT'\n</code></pre>\n<h3>Response Example</h3>\n<pre><code class=\"language-json\">{\n\t<span class=\"hljs-attr\">\"metadata\"</span>: {},\n\t<span class=\"hljs-attr\">\"instanceId\"</span>: <span class=\"hljs-string\">\"10.10.10.10-8888-DEFAULT-nacos.test.2\"</span>,\n\t<span class=\"hljs-attr\">\"port\"</span>: <span class=\"hljs-number\">8888</span>,\n\t<span class=\"hljs-attr\">\"service\"</span>: <span class=\"hljs-string\">\"nacos.test.2\"</span>,\n\t<span class=\"hljs-attr\">\"healthy\"</span>: <span class=\"hljs-literal\">false</span>,\n\t<span class=\"hljs-attr\">\"ip\"</span>: <span class=\"hljs-string\">\"10.10.10.10\"</span>,\n\t<span class=\"hljs-attr\">\"clusterName\"</span>: <span class=\"hljs-string\">\"DEFAULT\"</span>,\n\t<span class=\"hljs-attr\">\"weight\"</span>: <span class=\"hljs-number\">1.0</span>\n}\n</code></pre>\n"
    },
    {
      "filename": "quick-start.md",
      "__html": "<p>This quick start guide is a detailed instruction of setting up Nacos system on your local machine to use it.</p>\n<h2>1.Prerequisite</h2>\n<p>The following softwares are assumed installed:</p>\n<p>1.64bit OS, Linux/Unix/Mac is recommended;\n2.64bit JDK 1.8+;\n3.Maven 3.2.x;</p>\n<h2>2.Download &amp; Build from Release</h2>\n<blockquote>\n<p>unzip nacos-source.zip\ncd nacos/\nmvn -Prelease-all -DskipTests clean install -U\ncd distribution/target/nacos-all/nacos</p>\n</blockquote>\n<h2>3.Start Server</h2>\n<h3>Linux/Unix/Mac</h3>\n<ul>\n<li>standalone mean not cluster Mode *\nsh <a href=\"http://startup.sh\">startup.sh</a> standalone</li>\n</ul>\n<h3>Windows</h3>\n<ul>\n<li>standalone mean not cluster Mode *\ncmd startup.cmd standalone</li>\n</ul>\n<h2>4.service &amp; cfg management</h2>\n<h3>publish service instance</h3>\n<p>curl -X PUT '<a href=\"http://127.0.0.1:8080/nacos/naming/instance?serviceName=nacos.naming.serviceName&amp;ip=20.18.7.10&amp;port=8080\">http://127.0.0.1:8080/nacos/naming/instance?serviceName=nacos.naming.serviceName&amp;ip=20.18.7.10&amp;port=8080</a>'</p>\n<h3>get Service instances</h3>\n<p>curl -X GET <a href=\"http://127.0.0.1:8080/nacos/naming/instances?serviceName=nacos.naming.serviceName\">http://127.0.0.1:8080/nacos/naming/instances?serviceName=nacos.naming.serviceName</a>'</p>\n<h3>publish config</h3>\n<p>curl -X POST &quot;<a href=\"http://127.0.0.1:8080/nacos/basestone.do?method=syncUpdateAll?dataId=nacos.cfg.dataId&amp;group=test&amp;content=helloWorld\">http://127.0.0.1:8080/nacos/basestone.do?method=syncUpdateAll?dataId=nacos.cfg.dataId&amp;group=test&amp;content=helloWorld</a>&quot;</p>\n<h3>get config</h3>\n<p>curl  -X GET &quot;<a href=\"http://127.0.0.1:8080/nacos/config.no?dataId=nacos.cfg.dataId&amp;group=test\">http://127.0.0.1:8080/nacos/config.no?dataId=nacos.cfg.dataId&amp;group=test</a>&quot;</p>\n<h2>5.Shutdown Servers</h2>\n<p>sh <a href=\"http://shutdown.sh\">shutdown.sh</a>\nquick-start</p>\n"
    },
    {
      "filename": "sdk.md",
      "__html": "<h1>Configration Management</h1>\n<h2>Get configuration</h2>\n<h3>Description</h3>\n<p>Used to get the configuration from ACM when the service starts.</p>\n<pre><code>public static String getConfig(String dataId, String group, long timeoutMs) throws NacosException\n\n</code></pre>\n<h3>Request parameters</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Parameter name</th>\n<th style=\"text-align:left\">Parameter type</th>\n<th style=\"text-align:left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">dataId</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">Configuration ID. Use a naming rule like package.class (for example, com.taobao.tc.refund.log.level) to ensure global uniqueness. It is recommended to indicate business meaning of the configuration in the &quot;class&quot; section. Use lower case for all characters. Use alphabetical letters and these four special characters (&quot;.&quot;, &quot;:&quot;, &quot;-&quot;, &quot;_&quot;) only. Up to 256 characters are allowed.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">group</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">Configuration group. To ensure uniqueness, format such as __product name: module name __(for example, ACM:Test) is preferred. Use alphabetical letters and these four special characters (&quot;.&quot;, &quot;:&quot;, &quot;-&quot;, &quot;_&quot;) only. Up to 128 characters are allowed.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">timeout</td>\n<td style=\"text-align:left\">string</td>\n<td style=\"text-align:left\">Length of configuration read time-out (in ms). Recommended value: 3000.</td>\n</tr>\n</tbody>\n</table>\n<h3>Return values</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Parameter type</th>\n<th style=\"text-align:left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">Configuration value</td>\n</tr>\n</tbody>\n</table>\n<h3>Request example</h3>\n<pre><code>try {\n    // Initialize the configuration service, and the console automatically obtains the following parameters through the sample code.\n    ConfigService.init(&quot;${endpoint}&quot;, &quot;${namespace}&quot;, &quot;${accessKey}&quot;, &quot;${secretKey}&quot;);\n    // Actively get the configuration.\n\tString content = ConfigService.getConfig(&quot;${dataId}&quot;, &quot;${group}&quot;, 3000);\n\tSystem.out.println(content);\n} catch (ConfigException e) {\n    // TODO Auto-generated catch block\n    e.printStackTrace();\n}\n</code></pre>\n<h3>Exception specification</h3>\n<p>A ConfigException exception is thrown in case of a configuration read time-out or a network error.</p>\n<h2>Listen for configurations</h2>\n<h3>Description</h3>\n<p>Use the ACM dynamic configuration listening API to enable ACM to send configuration change notifications.</p>\n<pre><code>public static void addListener(String dataId, ConfigChangeListenerAdapter listener)\n\n</code></pre>\n<h3>Request parameters</h3>\n<div class=\"bi-table\">\n  <table>\n    <colgroup>\n      <col width=\"auto\" />\n      <col width=\"auto\" />\n      <col width=\"auto\" />\n    </colgroup>\n    <tbody>\n      <tr>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">Parameter name</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">Parameter type</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">Description</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">dataId</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">String</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">Configuration ID. Use a naming rule like package.class (for example, com.taobao.tc.refund.log.level) to ensure global uniqueness. It is recommended to indicate business meaning of the configuration in the &quot;class&quot; section. Use lower\n            case for all characters. Use alphabetical letters and these four special characters (&quot;.&quot;, &quot;:&quot;, &quot;-&quot;, &quot;_&quot;) only. Up to 256 characters are allowed.</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">group</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">String</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">Configuration group. To ensure uniqueness, format such as **product name: module name **(for example, ACM:Test) is preferred. Use alphabetical letters and these four special characters (&quot;.&quot;, &quot;:&quot;, &quot;-&quot;, &quot;_&quot;)\n            only. Up to 128 characters are allowed.</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">listener</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">Config Change Listener</div>\n        </td>\n        <td rowspan=\"1\" colSpan=\"1\">\n          <div data-type=\"p\">Listener. Configuration changes go into the callback function of the listener.</div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n<h3>Return values</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Parameter type</th>\n<th style=\"text-align:left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">Configuration value. This value is returned through the callback function during initialization or configuration modification.</td>\n</tr>\n</tbody>\n</table>\n<h3>Request example</h3>\n<pre><code>\n// Initialize the configuration service, and the console automatically obtains the following parameters through the sample code.\nConfigService.init(&quot;${endpoint}&quot;, &quot;${namespace}&quot;, &quot;${accessKey}&quot;, &quot;${secretKey}&quot;);\n// Add listeners to the configuration during initialization, which calls back a notification of configuration changes.\nConfigService.addListener(&quot;${dataId}&quot;, &quot;${group}&quot;, new ConfigChangeListener() {\n    public void receiveConfigInfo(String configInfo) {\n        // After the configuration is updated, the latest value is returned to the user by this callback function.\n        System.out.println(configInfo);\n    }\n});\n// Keep the main thread alive throughout the test, because the configuration subscription runs in a daemon thread, which exits once the main thread exits. The following code is not required in a real environment.\nwhile (true) {\n    try {\n        Thread.sleep(1000);\n    } catch (InterruptedException e) {\n        e.printStackTrace();\n    }\n}\n</code></pre>\n<h2>Publish configuration</h2>\n<h3>Description</h3>\n<p>It publishes ACM configurations automatically with program to reduce operation and maintenance costs with automation.</p>\n<p><strong>Note:</strong> It uses the same publishing interface to create or modify a configuration. If the specified configuration doesn’t exist, then it creates a configuration. If the specified configuration exists, then it updates the configuration.</p>\n<pre><code>public static boolean publishConfig(String dataId, String group, String content) throws ConfigException\n\n</code></pre>\n<h3>Request parameters</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Parameter name</th>\n<th style=\"text-align:left\">Parameter type</th>\n<th style=\"text-align:left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">dataId</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">Configuration ID. Naming convention similar to package.class (for example com.taobao.tc.refund.log.level) is used for ensuring the global uniqueness We recommended that you define the class part based on business meaning. All characters must be in lower case. Only English characters and four special characters (“. ”, “: ”, “-”, “_”) are allowed. It must not exceed 256 bytes.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">group</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">Configuration group. We recommend that you use product name: module name (for example ACM:Test) to ensure the uniqueness. Only English characters and four special characters (“. ”, “: ”, “-”, “_”) are allowed. It must not exceed 128 bytes.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">content</td>\n<td style=\"text-align:left\">string</td>\n<td style=\"text-align:left\">Configuration content. It must not exceed 100K bytes.</td>\n</tr>\n</tbody>\n</table>\n<h3>Response parameters</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Parameter type</th>\n<th style=\"text-align:left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">boolean</td>\n<td style=\"text-align:left\">If the publishing is successful</td>\n</tr>\n</tbody>\n</table>\n<h3>Request example</h3>\n<pre><code>try {\n    // Initialize the configuration service. Retrieves the following parameters in console with sample code\n    ConfigService.init(&quot;${endpoint}&quot;, &quot;${namespace}&quot;, &quot;${accessKey}&quot;, &quot;${secretKey}&quot;);\n    // Actively retrieves configuration\n\tboolean isPublishOk = ConfigService.publishConfig(&quot;${dataId}&quot;, &quot;${group}&quot;, &quot;${content}&quot;);\n\tSystem.out.println(isPublishOk);\n} catch (ConfigException e) {\n    // TODO Auto-generated catch block\n    e.printStackTrace();\n}\n</code></pre>\n<h3>Exceptions</h3>\n<p>In case of reading configuration timeout or network issues, ConfigException exception is thrown.</p>\n<h2>Delete configuration</h2>\n<h3>Description</h3>\n<p>It deletes ACM configurations automatically with program to reduce operation and maintenance costs with automation.</p>\n<p><strong>Note:</strong> If the specified configuration exists, then it deletes the configuration. If the specified configuration doesn’t exist, then it returns a successful message.</p>\n<pre><code>public static boolean removeConfig(String dataId, String group) throws ConfigException\n\n</code></pre>\n<h3>Request parameters</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Parameter name</th>\n<th style=\"text-align:left\">Parameter type</th>\n<th style=\"text-align:left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">dataId</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">Configuration ID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">group</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">Configuration group</td>\n</tr>\n</tbody>\n</table>\n<h3>Response parameters</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Parameter type</th>\n<th style=\"text-align:left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">boolean</td>\n<td style=\"text-align:left\">If the deletion is successful</td>\n</tr>\n</tbody>\n</table>\n<h3>Request example</h3>\n<pre><code>try {\n    // Initialize the configuration service. Retrieves the following parameters in console with sample code\n    ConfigService.init(&quot;${endpoint}&quot;, &quot;${namespace}&quot;, &quot;${accessKey}&quot;, &quot;${secretKey}&quot;);\n    // Actively retrieves configuration\n\tboolean isRemoveOk = ConfigService.removeConfig(&quot;${dataId}&quot;, &quot;${group}&quot;);\n\tSystem.out.println(isRemoveOk);\n} catch (ConfigException e) {\n    // TODO Auto-generated catch block\n    e.printStackTrace();\n}\n</code></pre>\n<h3>Exceptions</h3>\n<p>In case of reading configuration timeout or network issues, ConfigException exception is thrown.</p>\n<h1>Service Discovery SDK</h1>\n<h2>Register Instance</h2>\n<h3>Description</h3>\n<p>Register an instance to service.</p>\n<pre><code class=\"language-java\">    <span class=\"hljs-comment\">/**\n     * Register a instance to service\n     *\n     * <span class=\"hljs-doctag\">@param</span> serviceName name of service\n     * <span class=\"hljs-doctag\">@param</span> ip          instance ip\n     * <span class=\"hljs-doctag\">@param</span> port        instance port\n     * <span class=\"hljs-doctag\">@throws</span> NacosException\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">registerInstance</span><span class=\"hljs-params\">(String serviceName, String ip, <span class=\"hljs-keyword\">int</span> port)</span> <span class=\"hljs-keyword\">throws</span> NacosException</span>;\n\n    <span class=\"hljs-comment\">/**\n     * Register a instance to service with specified cluster name\n     *\n     * <span class=\"hljs-doctag\">@param</span> serviceName name of service\n     * <span class=\"hljs-doctag\">@param</span> ip          instance ip\n     * <span class=\"hljs-doctag\">@param</span> port        instance port\n     * <span class=\"hljs-doctag\">@param</span> clusterName instance cluster name\n     * <span class=\"hljs-doctag\">@throws</span> NacosException\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">registerInstance</span><span class=\"hljs-params\">(String serviceName, String ip, <span class=\"hljs-keyword\">int</span> port, String clusterName)</span> <span class=\"hljs-keyword\">throws</span> NacosException</span>;\n\n    <span class=\"hljs-comment\">/**\n     * Register a instance to service with specified instance properties\n     *\n     * <span class=\"hljs-doctag\">@param</span> serviceName name of service\n     * <span class=\"hljs-doctag\">@param</span> instance    instance to register\n     * <span class=\"hljs-doctag\">@throws</span> NacosException\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">registerInstance</span><span class=\"hljs-params\">(String serviceName, Instance instance)</span> <span class=\"hljs-keyword\">throws</span> NacosException</span>;\n</code></pre>\n<h3>Request Parameters</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">serviceName</td>\n<td style=\"text-align:left\">String</td>\n<td>service name</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ip</td>\n<td style=\"text-align:left\">String</td>\n<td>instance ip</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">port</td>\n<td style=\"text-align:left\">int</td>\n<td>instance port</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">clusterName</td>\n<td style=\"text-align:left\">String</td>\n<td>cluster name</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">instance</td>\n<td style=\"text-align:left\">Refer to Java docs</td>\n<td>instance properties</td>\n</tr>\n</tbody>\n</table>\n<h3>Response</h3>\n<p>void</p>\n<h3>Request Example</h3>\n<pre><code class=\"language-java\">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class=\"hljs-string\">\"serveAddr\"</span>));\nnaming.registerInstance(<span class=\"hljs-string\">\"nacos.test.3\"</span>, <span class=\"hljs-string\">\"11.11.11.11\"</span>, <span class=\"hljs-number\">8888</span>, <span class=\"hljs-string\">\"TEST1\"</span>);\n\nInstance instance = <span class=\"hljs-keyword\">new</span> Instance();\ninstance.setIp(<span class=\"hljs-string\">\"55.55.55.55\"</span>);\ninstance.setPort(<span class=\"hljs-number\">9999</span>);\ninstance.setHealthy(<span class=\"hljs-keyword\">false</span>);\ninstance.setWeight(<span class=\"hljs-number\">2.0</span>);\nMap&lt;String, String&gt; instanceMeta = <span class=\"hljs-keyword\">new</span> HashMap&lt;&gt;();\ninstanceMeta.put(<span class=\"hljs-string\">\"site\"</span>, <span class=\"hljs-string\">\"et2\"</span>);\ninstance.setMetadata(instanceMeta);\n\nService service = <span class=\"hljs-keyword\">new</span> Service(<span class=\"hljs-string\">\"nacos.test.4\"</span>);\nservice.setApp(<span class=\"hljs-string\">\"nacos-naming\"</span>);\nservice.setEnableClientBeat(<span class=\"hljs-keyword\">true</span>);\nservice.setEnableHealthCheck(<span class=\"hljs-keyword\">true</span>);\nservice.setProtectThreshold(<span class=\"hljs-number\">0.8F</span>);\nservice.setGroup(<span class=\"hljs-string\">\"CNCF\"</span>);\nMap&lt;String, String&gt; serviceMeta = <span class=\"hljs-keyword\">new</span> HashMap&lt;&gt;();\nserviceMeta.put(<span class=\"hljs-string\">\"symmetricCall\"</span>, <span class=\"hljs-string\">\"true\"</span>);\nservice.setMetadata(serviceMeta);\ninstance.setService(service);\n\nCluster cluster = <span class=\"hljs-keyword\">new</span> Cluster();\ncluster.setName(<span class=\"hljs-string\">\"TEST5\"</span>);\nAbstractHealthChecker.Http healthChecker = <span class=\"hljs-keyword\">new</span> AbstractHealthChecker.Http();\nhealthChecker.setCheckCode(<span class=\"hljs-number\">400</span>);\nhealthChecker.setCurlHost(<span class=\"hljs-string\">\"USer-Agent|Nacos\"</span>);\nhealthChecker.setCurlPath(<span class=\"hljs-string\">\"/xxx.html\"</span>);\ncluster.setHealthChecker(healthChecker);\nMap&lt;String, String&gt; clusterMeta = <span class=\"hljs-keyword\">new</span> HashMap&lt;&gt;();\nclusterMeta.put(<span class=\"hljs-string\">\"xxx\"</span>, <span class=\"hljs-string\">\"yyyy\"</span>);\ncluster.setMetadata(clusterMeta);\n\ninstance.setCluster(cluster);\n\nnaming.registerInstance(<span class=\"hljs-string\">\"nacos.test.4\"</span>, instance);\n</code></pre>\n<h2>Deregister Instance</h2>\n<h3>Description</h3>\n<p>Remove instance from service.</p>\n<pre><code class=\"language-java\">    <span class=\"hljs-comment\">/**\n     * Deregister instance from a service\n     *\n     * <span class=\"hljs-doctag\">@param</span> serviceName name of service\n     * <span class=\"hljs-doctag\">@param</span> ip          instance ip\n     * <span class=\"hljs-doctag\">@param</span> port        instance port\n     * <span class=\"hljs-doctag\">@throws</span> NacosException\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">deregisterInstance</span><span class=\"hljs-params\">(String serviceName, String ip, <span class=\"hljs-keyword\">int</span> port)</span> <span class=\"hljs-keyword\">throws</span> NacosException</span>;\n\n    <span class=\"hljs-comment\">/**\n     * Deregister instance with specified cluster name from a service\n     *\n     * <span class=\"hljs-doctag\">@param</span> serviceName name of service\n     * <span class=\"hljs-doctag\">@param</span> ip          instance ip\n     * <span class=\"hljs-doctag\">@param</span> port        instance port\n     * <span class=\"hljs-doctag\">@param</span> clusterName     instance cluster name\n     * <span class=\"hljs-doctag\">@throws</span> NacosException\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">deregisterInstance</span><span class=\"hljs-params\">(String serviceName, String ip, <span class=\"hljs-keyword\">int</span> port, String clusterName)</span> <span class=\"hljs-keyword\">throws</span> NacosException</span>;\n</code></pre>\n<h3>Request Parameters</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Type</th>\n<th style=\"text-align:left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">serviceName</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">service name</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ip</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">instance ip</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">port</td>\n<td style=\"text-align:left\">int</td>\n<td style=\"text-align:left\">instance port</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">clusterName</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">cluster name</td>\n</tr>\n</tbody>\n</table>\n<h3>Response</h3>\n<p>无</p>\n<h3>Request Example</h3>\n<pre><code class=\"language-java\">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class=\"hljs-string\">\"serveAddr\"</span>));\nnaming.deregisterInstance(<span class=\"hljs-string\">\"nacos.test.3\"</span>, <span class=\"hljs-string\">\"11.11.11.11\"</span>, <span class=\"hljs-number\">8888</span>, <span class=\"hljs-string\">\"DEFAULT\"</span>);\n</code></pre>\n<h2>Get all instances of service</h2>\n<h3>Description</h3>\n<p>Get all instances of service.</p>\n<pre><code class=\"language-java\">    <span class=\"hljs-comment\">/**\n     * Get all instances of a service\n     *\n     * <span class=\"hljs-doctag\">@param</span> serviceName name of service\n     * <span class=\"hljs-doctag\">@return</span> A list of instance\n     * <span class=\"hljs-doctag\">@throws</span> NacosException\n     */</span>\n    <span class=\"hljs-function\">List&lt;Instance&gt; <span class=\"hljs-title\">getAllInstances</span><span class=\"hljs-params\">(String serviceName)</span> <span class=\"hljs-keyword\">throws</span> NacosException</span>;\n\n    <span class=\"hljs-comment\">/**\n     * Get all instances within specified clusters of a service\n     *\n     * <span class=\"hljs-doctag\">@param</span> serviceName name of service\n     * <span class=\"hljs-doctag\">@param</span> clusters    list of cluster\n     * <span class=\"hljs-doctag\">@return</span> A list of qualified instance\n     * <span class=\"hljs-doctag\">@throws</span> NacosException\n     */</span>\n    <span class=\"hljs-function\">List&lt;Instance&gt; <span class=\"hljs-title\">getAllInstances</span><span class=\"hljs-params\">(String serviceName, List&lt;String&gt; clusters)</span> <span class=\"hljs-keyword\">throws</span> NacosException</span>;\n</code></pre>\n<h3>Request Parameters</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">serviceName</td>\n<td style=\"text-align:left\">String</td>\n<td>service name</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">clusters</td>\n<td style=\"text-align:left\">List</td>\n<td>cluster list</td>\n</tr>\n</tbody>\n</table>\n<h3>Response</h3>\n<p>List<Instance> instance list。</p>\n<h3>Request Example</h3>\n<pre><code class=\"language-java\">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class=\"hljs-string\">\"serveAddr\"</span>));\nSystem.out.println(naming.getAllInstances(<span class=\"hljs-string\">\"nacos.test.3\"</span>));\n</code></pre>\n<h2>Get filtered list of instance</h2>\n<h3>Description</h3>\n<p>Get healthy or unhealthy instances of service.</p>\n<pre><code class=\"language-java\">    <span class=\"hljs-comment\">/**\n     * Get qualified instances of service\n     *\n     * <span class=\"hljs-doctag\">@param</span> serviceName name of service\n     * <span class=\"hljs-doctag\">@param</span> healthy     a flag to indicate returning healthy or unhealthy instances\n     * <span class=\"hljs-doctag\">@return</span> A qualified list of instance\n     * <span class=\"hljs-doctag\">@throws</span> NacosException\n     */</span>\n    <span class=\"hljs-function\">List&lt;Instance&gt; <span class=\"hljs-title\">selectInstances</span><span class=\"hljs-params\">(String serviceName, <span class=\"hljs-keyword\">boolean</span> healthy)</span> <span class=\"hljs-keyword\">throws</span> NacosException</span>;\n\n    <span class=\"hljs-comment\">/**\n     * Get qualified instances within specified clusters of service\n     *\n     * <span class=\"hljs-doctag\">@param</span> serviceName name of service\n     * <span class=\"hljs-doctag\">@param</span> clusters    list of cluster\n     * <span class=\"hljs-doctag\">@param</span> healthy     a flag to indicate returning healthy or unhealthy instances\n     * <span class=\"hljs-doctag\">@return</span> A qualified list of instance\n     * <span class=\"hljs-doctag\">@throws</span> NacosException\n     */</span>\n    <span class=\"hljs-function\">List&lt;Instance&gt; <span class=\"hljs-title\">selectInstances</span><span class=\"hljs-params\">(String serviceName, List&lt;String&gt; clusters, <span class=\"hljs-keyword\">boolean</span> healthy)</span> <span class=\"hljs-keyword\">throws</span> NacosException</span>;\n</code></pre>\n<h3>Request Parameters</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">serviceName</td>\n<td style=\"text-align:left\">String</td>\n<td>service name</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">clusters</td>\n<td style=\"text-align:left\">List</td>\n<td>cluster list</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">healthy</td>\n<td style=\"text-align:left\">boolean</td>\n<td>healty or not</td>\n</tr>\n</tbody>\n</table>\n<h3>Response</h3>\n<p>List<Instance> instance list.</p>\n<h3>Request Example</h3>\n<pre><code class=\"language-java\">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class=\"hljs-string\">\"serveAddr\"</span>));\nSystem.out.println(naming.selectInstances(<span class=\"hljs-string\">\"nacos.test.3\"</span>, <span class=\"hljs-keyword\">true</span>));\n</code></pre>\n<h2>Get one healthy instance</h2>\n<h3>Description</h3>\n<p>Get one healthy instance selected by load-balance strategy.</p>\n<pre><code class=\"language-java\">    <span class=\"hljs-comment\">/**\n     * Select one healthy instance of service using predefined load balance strategy\n     *\n     * <span class=\"hljs-doctag\">@param</span> serviceName name of service\n     * <span class=\"hljs-doctag\">@return</span> qualified instance\n     * <span class=\"hljs-doctag\">@throws</span> NacosException\n     */</span>\n    <span class=\"hljs-function\">Instance <span class=\"hljs-title\">selectOneHealthyInstance</span><span class=\"hljs-params\">(String serviceName)</span> <span class=\"hljs-keyword\">throws</span> NacosException</span>;\n\n    <span class=\"hljs-comment\">/**\n     * Select one healthy instance of service using predefined load balance strategy\n     *\n     * <span class=\"hljs-doctag\">@param</span> serviceName name of service\n     * <span class=\"hljs-doctag\">@param</span> clusters    a list of clusters should the instance belongs to\n     * <span class=\"hljs-doctag\">@return</span> qualified instance\n     * <span class=\"hljs-doctag\">@throws</span> NacosException\n     */</span>\n    <span class=\"hljs-function\">Instance <span class=\"hljs-title\">selectOneHealthyInstance</span><span class=\"hljs-params\">(String serviceName, List&lt;String&gt; clusters)</span> <span class=\"hljs-keyword\">throws</span> NacosException</span>;\n</code></pre>\n<h3>Request Parameters</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">serviceName</td>\n<td style=\"text-align:left\">String</td>\n<td>service name</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">clusters</td>\n<td style=\"text-align:left\">List</td>\n<td>cluster list</td>\n</tr>\n</tbody>\n</table>\n<h3>Response</h3>\n<p>Instance</p>\n<h3>Request Example</h3>\n<pre><code class=\"language-java\">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class=\"hljs-string\">\"serveAddr\"</span>));\nSystem.out.println(naming.selectOneHealthyInstance(<span class=\"hljs-string\">\"nacos.test.3\"</span>));\n</code></pre>\n<h2>Listen Service</h2>\n<h3>Description</h3>\n<p>Listen for changes of instances under a service.</p>\n<pre><code class=\"language-java\">    <span class=\"hljs-comment\">/**\n     * Subscribe service to receive events of instances alteration\n     *\n     * <span class=\"hljs-doctag\">@param</span> serviceName name of service\n     * <span class=\"hljs-doctag\">@param</span> listener    event listener\n     * <span class=\"hljs-doctag\">@throws</span> NacosException\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">subscribe</span><span class=\"hljs-params\">(String serviceName, EventListener listener)</span> <span class=\"hljs-keyword\">throws</span> NacosException</span>;\n\n    <span class=\"hljs-comment\">/**\n     * Subscribe service to receive events of instances alteration\n     *\n     * <span class=\"hljs-doctag\">@param</span> serviceName name of service\n     * <span class=\"hljs-doctag\">@param</span> clusters    list of cluster\n     * <span class=\"hljs-doctag\">@param</span> listener    event listener\n     * <span class=\"hljs-doctag\">@throws</span> NacosException\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">subscribe</span><span class=\"hljs-params\">(String serviceName, List&lt;String&gt; clusters, EventListener listener)</span> <span class=\"hljs-keyword\">throws</span> NacosException</span>;\n</code></pre>\n<h3>Request Parameters</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">serviceName</td>\n<td style=\"text-align:left\">String</td>\n<td>service name</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">clusters</td>\n<td style=\"text-align:left\">List</td>\n<td>cluster list</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">listener</td>\n<td style=\"text-align:left\">EventListener</td>\n<td>event listener</td>\n</tr>\n</tbody>\n</table>\n<h3>Response</h3>\n<p>void</p>\n<h3>Request Example</h3>\n<pre><code class=\"language-java\">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class=\"hljs-string\">\"serveAddr\"</span>));\nnaming.subscribe(<span class=\"hljs-string\">\"nacos.test.3\"</span>, event -&gt; {\n    <span class=\"hljs-keyword\">if</span> (event <span class=\"hljs-keyword\">instanceof</span> NamingEvent) {\n        System.out.println(((NamingEvent) event).getServceName());\n        System.out.println(((NamingEvent) event).getInstances());\n    }\n});\n</code></pre>\n<h2>Unlisten Service</h2>\n<h3>Description</h3>\n<p>Cancel listening service.</p>\n<pre><code class=\"language-java\">    <span class=\"hljs-comment\">/**\n     * Unsubscribe event listener of service\n     *\n     * <span class=\"hljs-doctag\">@param</span> serviceName name of service\n     * <span class=\"hljs-doctag\">@param</span> listener    event listener\n     * <span class=\"hljs-doctag\">@throws</span> NacosException\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">unsubscribe</span><span class=\"hljs-params\">(String serviceName, EventListener listener)</span> <span class=\"hljs-keyword\">throws</span> NacosException</span>;\n\n    <span class=\"hljs-comment\">/**\n     * Unsubscribe event listener of service\n     *\n     * <span class=\"hljs-doctag\">@param</span> serviceName name of service\n     * <span class=\"hljs-doctag\">@param</span> clusters    list of cluster\n     * <span class=\"hljs-doctag\">@param</span> listener    event listener\n     * <span class=\"hljs-doctag\">@throws</span> NacosException\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">unsubscribe</span><span class=\"hljs-params\">(String serviceName, List&lt;String&gt; clusters, EventListener listener)</span> <span class=\"hljs-keyword\">throws</span> NacosException</span>;\n</code></pre>\n<h3>Request Parameters</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Name</th>\n<th style=\"text-align:left\">Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">serviceName</td>\n<td style=\"text-align:left\">String</td>\n<td>service name</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">clusters</td>\n<td style=\"text-align:left\">List</td>\n<td>cluster list</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">listener</td>\n<td style=\"text-align:left\">EventListener</td>\n<td>event listener</td>\n</tr>\n</tbody>\n</table>\n<h3>Response</h3>\n<p>void</p>\n<h3>Request Example</h3>\n<pre><code class=\"language-java\">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class=\"hljs-string\">\"serveAddr\"</span>));\nnaming.unsubscribe(<span class=\"hljs-string\">\"nacos.test.3\"</span>, event -&gt; {});\n</code></pre>\n"
    },
    {
      "filename": "what-is-nacos.md",
      "__html": "<h1>What is Nacos</h1>\n<h2>Overview</h2>\n<p>Welcome to Nacos!</p>\n<p>Nacos is all things about discovery, config and manage your micro-services. Nacos provides users with an easy-to-use feature set for dynamic service discovery, service configuration management, service provisioning and management.</p>\n<p>Nacos help users to build, deliver and manage their micro-services platform more agile and easier.</p>\n<p>Nacos is an infrastructure when build modern service centric application by using micro-services or cloud-native approaches.</p>\n<h2>What is Nacos?</h2>\n<p>Service is a first-class citizen in Nacos. Nacos support almost all type of services, for example: Kubernetes service, gRPC/Dubbo service or RESTFul service.</p>\n<p>The key features of Consul are:</p>\n<ul>\n<li><strong>Service Discovery And Service Health Check</strong></li>\n</ul>\n<p>Nacos supports both DNS-based and RPC-based (eg Dubbo/gRPC) service discovery, producer can register a service with <a href=\"\">native sdk</a> or <a href=\"\">openAPI</a> or with <a href=\"\">a dedicated agent</a>, consumer can discovery this service with either DNS or HTTP.</p>\n<p>Nacos also provide real-time health checks of services to prevent sending requests to unhealthy hosts, Nacos support multi-level health check, for example, 4-layer (tcp) or 7-layer(http, redis, mysql), with complex network topology, Nacos support both agent mode or server mode health check. Nacos also provide a unity service health dashboard when use with Kubernetes or spring cloud.</p>\n<ul>\n<li><strong>Dynamic Configuration Management</strong></li>\n</ul>\n<p>Dynamic Configuration Service allows you to manage the configuration of all applications or services in a centralized and dynamic manner in all environments.</p>\n<p>Dynamic configuration eliminates the need to redeploy applications and services when configuring updates.</p>\n<p>It can be more convenient to help you achieve stateless services and more easily achieve on-demand elastic expansion of service instances.</p>\n<p>Naocs provide an easy-to-use UI to help you management all of your configurations and provide\nsome out-of-box features such as config version track, gray release and rollback, client push status tracking etc.</p>\n<ul>\n<li><strong>Dynamic DNS Service</strong></li>\n</ul>\n<p>Dynamic DNS services that support weighted routing make it easier for you to implement mid-tier load balancing, flexible routing policies, flow control, and simple DNS resolution services in your production environment within your data center, helping you to more easily implement DNS-based Service discovery.</p>\n<ul>\n<li><strong>Service and MetaData Management</strong></li>\n</ul>\n<p>Service management support manages all services and their metadata from the perspective of the microservices platform. This includes the service description file, life cycle, static data center topology, service health status, traffic, routing and security rules, SLA, and first line Metrics et al.</p>\n<p>you can more Nacos features with <a href=\"\">features list</a></p>\n<h2>Nacos and Other Open Sources ecology</h2>\n<p>[ͼƬ]</p>\n<p>As the above Nacos landscape shows, Nacos seamless support many open source platform,\nsuch as Dubbo, Spring Cloud, kubernetes and service mesh.</p>\n<p>With Nacos, you can take advantage of various aspects of Nacos' capabilities to simplify solutions in service discovery, configuration management more easilier to manage microservices on these platforms.</p>\n<p>for more information, you can check with following:</p>\n<ul>\n<li><a href=\"\">use Nacos with Kubernetes</a></li>\n<li><a href=\"\">use Nacos with Dubbo</a></li>\n<li><a href=\"\">use Nacos with Spring Cloud</a></li>\n<li><a href=\"\">using Nacos with service mesh</a></li>\n</ul>\n<h2>Basic Architecture and Concepts</h2>\n<ul>\n<li><strong>Naming Service/Service Registry</strong></li>\n<li><strong>Configuration</strong>  define aa</li>\n<li><strong>Service MetaData</strong>  define aa</li>\n<li><strong>Producer</strong>  define aa</li>\n<li><strong>Consumer</strong>   define aa</li>\n<li>...</li>\n</ul>\n<h2>What's next</h2>\n<p>Continue onwards with [the getting started guide] () to get Consul up and running.</p>\n"
    }
  ]
}